// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PurchaseSummaryForm contact travel manager info when companyName does not exists should not contain contact info travel method field 1`] = `null`;

exports[`PurchaseSummaryForm contact travel manager info when companyName exists should contain contact info travel method field 1`] = `
<ContactInfoTravelManagerFields
  formData={
    Object {
      "contactTravelManagerInfo": Object {
        "contactEmail": null,
        "contactMethod": "CALL_ME",
        "contactPhone": Object {
          "countryCode": "1",
          "number": "2145551234",
        },
      },
    }
  }
  onChange={[Function]}
  value="(1) 214-555-1234"
>
  <Fields
    label="CONTACT INFORMATION FOR TRAVEL MANAGER"
    type="grouped"
  >
    <div
      className="fields grouped"
    >
      <label
        className="fields--label"
      >
        CONTACT INFORMATION FOR TRAVEL MANAGER
      </label>
      <WithField(FormNavItemField)
        className="nav-item-field "
        name="contactInfoTravelManagerContent"
        placeholder=""
        value="(1) 214-555-1234"
      >
        <Field
          error={false}
        >
          <div
            className="field"
          >
            <FormNavItemField
              className="nav-item-field "
              clearError={[Function]}
              disabled={false}
              name="contactInfoTravelManagerContent"
              onChange={[Function]}
              placeholder=""
              shouldShowDisplayValue={true}
              value="(1) 214-555-1234"
            >
              <NavItemLink
                className="nav-item-field nav-item-field "
                disabled={false}
                icon="keyboard-arrow-right"
                iconClassName="nav-item-link--icon"
                name="contactInfoTravelManagerContent"
              >
                <a
                  className="nav-item-link nav-item-field nav-item-field "
                  name="contactInfoTravelManagerContent"
                >
                  <div
                    className="fullwidth"
                  >
                    <span />
                    <div
                      className="nav-item-field-value"
                      data-qa="nav-item-field-value"
                    >
                      (1) 214-555-1234
                    </div>
                  </div>
                  <Icon
                    className="nav-item-link--icon"
                    type="keyboard-arrow-right"
                  >
                    <i
                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                    />
                  </Icon>
                </a>
              </NavItemLink>
            </FormNavItemField>
          </div>
        </Field>
      </WithField(FormNavItemField)>
    </div>
  </Fields>
</ContactInfoTravelManagerFields>
`;

exports[`PurchaseSummaryForm default values when corporate parent or guardian should not show parent or guardian div if no parentOrGuardianFormDataInfo exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    parentOrGuardianFormDataInfo={null}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      parentOrGuardianFormDataInfo={null}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        parentOrGuardianFormDataInfo={null}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm default values when corporate parent or guardian should show parent or guardian div if parentOrGuardianFormDataInfo exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    parentOrGuardianFormDataInfo={
      Array [
        Object {
          "name": "firstName lastName",
        },
      ]
    }
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      parentOrGuardianFormDataInfo={
        Array [
          Object {
            "name": "firstName lastName",
          },
        ]
      }
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        parentOrGuardianFormDataInfo={
          Array [
            Object {
              "name": "firstName lastName",
            },
          ]
        }
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <dt>
                  PARENT OR GUARDIAN
                </dt>
                <dd
                  data-qa="parent-or-guardian-section-title"
                >
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "undefined undefined",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                undefined undefined
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should not render ApplyRapidRewardsNavItemField if onApplyRapidRewardsClick does not exist 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={null}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={false}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={null}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={false}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={null}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={false}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should not show ApplyRapidRewardsNavItemField when shouldShowApplyRapidRewards is false and when isCurrencyInPoints flag is true, even if onApplyRapidRewardsClick exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isCurrencyInPoints={true}
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={false}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isCurrencyInPoints={true}
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={false}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isCurrencyInPoints={true}
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={false}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should not show ApplyRapidRewardsNavItemField when shouldShowApplyRapidRewards is false even if onApplyRapidRewardsClick exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={false}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={false}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={false}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should not show cash+points applied text when rapidRewardsApplied flag is false 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={true}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={true}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={true}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div
                  className="apply-rapid-rewards-nav-item"
                >
                  <dt
                    data-qa="apply-points-section-title"
                  >
                    APPLY CASH + POINTS
                  </dt>
                  <WithField(ApplyRapidRewardsNavItemField)
                    name="applyRapidRewards"
                    onNavItemClick={[Function]}
                    rapidRewardsApplied={false}
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <ApplyRapidRewardsNavItemField
                          clearError={[Function]}
                          name="applyRapidRewards"
                          onChange={[Function]}
                          onNavItemClick={[Function]}
                          rapidRewardsApplied={false}
                          value=""
                        >
                          <div
                            data-qa="review-form--apply-rapid-rewards-nav-item"
                          >
                            <NavItemLink
                              className="nav-item-field no-points-selected"
                              icon="keyboard-arrow-right"
                              iconClassName="nav-item-link--icon"
                              onClick={[Function]}
                            >
                              <a
                                className="nav-item-link nav-item-field no-points-selected"
                                onClick={[Function]}
                              >
                                <span>
                                  Select (optional)
                                </span>
                                <Icon
                                  className="nav-item-link--icon"
                                  type="keyboard-arrow-right"
                                >
                                  <i
                                    className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                  />
                                </Icon>
                              </a>
                            </NavItemLink>
                          </div>
                        </ApplyRapidRewardsNavItemField>
                      </div>
                    </Field>
                  </WithField(ApplyRapidRewardsNavItemField)>
                </div>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should show ApplyRapidRewardsNavItemField when shouldShowApplyRapidRewards is true and onApplyRapidRewardsClick exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={true}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={true}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={true}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div
                  className="apply-rapid-rewards-nav-item"
                >
                  <dt
                    data-qa="apply-points-section-title"
                  >
                    APPLY CASH + POINTS
                  </dt>
                  <WithField(ApplyRapidRewardsNavItemField)
                    name="applyRapidRewards"
                    onNavItemClick={[Function]}
                    rapidRewardsApplied={false}
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <ApplyRapidRewardsNavItemField
                          clearError={[Function]}
                          name="applyRapidRewards"
                          onChange={[Function]}
                          onNavItemClick={[Function]}
                          rapidRewardsApplied={false}
                          value=""
                        >
                          <div
                            data-qa="review-form--apply-rapid-rewards-nav-item"
                          >
                            <NavItemLink
                              className="nav-item-field no-points-selected"
                              icon="keyboard-arrow-right"
                              iconClassName="nav-item-link--icon"
                              onClick={[Function]}
                            >
                              <a
                                className="nav-item-link nav-item-field no-points-selected"
                                onClick={[Function]}
                              >
                                <span>
                                  Select (optional)
                                </span>
                                <Icon
                                  className="nav-item-link--icon"
                                  type="keyboard-arrow-right"
                                >
                                  <i
                                    className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                  />
                                </Icon>
                              </a>
                            </NavItemLink>
                          </div>
                        </ApplyRapidRewardsNavItemField>
                      </div>
                    </Field>
                  </WithField(ApplyRapidRewardsNavItemField)>
                </div>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should show ApplyRapidRewardsNavItemField when shouldShowApplyRapidRewards is true and when isCurrencyInPoints flag is false and onApplyRapidRewardsClick exists 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isCurrencyInPoints={false}
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={false}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    shouldShowApplyRapidRewards={true}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isCurrencyInPoints={false}
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={false}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      shouldShowApplyRapidRewards={true}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isCurrencyInPoints={false}
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={false}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        shouldShowApplyRapidRewards={true}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div
                  className="apply-rapid-rewards-nav-item"
                >
                  <dt
                    data-qa="apply-points-section-title"
                  >
                    APPLY CASH + POINTS
                  </dt>
                  <WithField(ApplyRapidRewardsNavItemField)
                    name="applyRapidRewards"
                    onNavItemClick={[Function]}
                    rapidRewardsApplied={false}
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <ApplyRapidRewardsNavItemField
                          clearError={[Function]}
                          name="applyRapidRewards"
                          onChange={[Function]}
                          onNavItemClick={[Function]}
                          rapidRewardsApplied={false}
                          value=""
                        >
                          <div
                            data-qa="review-form--apply-rapid-rewards-nav-item"
                          >
                            <NavItemLink
                              className="nav-item-field no-points-selected"
                              icon="keyboard-arrow-right"
                              iconClassName="nav-item-link--icon"
                              onClick={[Function]}
                            >
                              <a
                                className="nav-item-link nav-item-field no-points-selected"
                                onClick={[Function]}
                              >
                                <span>
                                  Select (optional)
                                </span>
                                <Icon
                                  className="nav-item-link--icon"
                                  type="keyboard-arrow-right"
                                >
                                  <i
                                    className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                  />
                                </Icon>
                              </a>
                            </NavItemLink>
                          </div>
                        </ApplyRapidRewardsNavItemField>
                      </div>
                    </Field>
                  </WithField(ApplyRapidRewardsNavItemField)>
                </div>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;

exports[`PurchaseSummaryForm split pay should show cash+points applied text when selectedSplitPay exists and rapidRewardsApplied flag is true 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <Connect(WithForm(PurchaseSummaryForm))
    EARLY_BIRD_AB_TESTING={false}
    billingAddressFormData={null}
    clickContactMethodFn={[Function]}
    companyName=""
    dutyOfCareContact={
      Object {
        "contactEmail": null,
        "contactMethod": null,
        "contactPhone": null,
        "disclaimerText": "This is a disclaimer",
        "legalVerbiage": "Dunder Mifflin Paper Company",
      }
    }
    earlyBirdEligibility={
      Object {
        "_meta": Object {
          "passengers": Array [
            Object {
              "accountNumber": null,
              "dateOfBirth": "1937-02-03",
              "gender": "M",
              "name": Object {
                "firstName": "Charith",
                "lastName": "Janusz",
                "middleName": "",
              },
              "passengerReference": "2",
            },
          ],
        },
        "adultProductsCount": "1",
        "bounds": Array [
          Object {
            "_meta": Object {
              "products": Object {
                "adult": Object {
                  "fare": Object {
                    "baseFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalFare": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                    "totalTaxesAndFees": Object {
                      "amount": "0.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  "passengerReference": Array [
                    "2",
                  ],
                  "productId": "mockProductId",
                },
              },
            },
            "flightNumbers": "#2795",
            "isEligible": true,
            "originDestinationAirports": "AUS - DAL",
            "passengersGroups": Array [
              Object {
                "canPurchaseEarlyBird": true,
                "decisionDescription": "1 Adult",
                "fareType": "Wanna Get Away",
                "isAlist": false,
                "price": Object {
                  "amount": "15.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
          },
        ],
        "ineligibilityReasons": null,
        "seniorProductsCount": "0",
        "totalPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "unitPrice": Object {
          "amount": "15.00",
          "currencyCode": "USD",
          "currencySymbol": "$",
          "description": "per passenger, each way",
        },
      }
    }
    formId="A"
    handleFirmOfferOfCreditFn={[Function]}
    initialFormData={
      Object {
        "paymentInfo": Object {},
      }
    }
    isEarlyBirdOnPurchaseVisible={false}
    isInternationalBooking={false}
    onApplyRapidRewardsClick={[Function]}
    onClickBillingAddress={[Function]}
    onEarlyBirdCheckInClick={[Function]}
    onIrnInfoClick={[Function]}
    onParentOrGuardianItemClick={[Function]}
    onPassengerItemClick={[Function]}
    onPaymentEditClick={[Function]}
    onSubmit={[Function]}
    onSwitchEarlyBirdInPathButton={[Function]}
    onTripAndPriceClick={[Function]}
    onUnmount={[Function]}
    passengers={
      Array [
        Object {
          "name": "Amber Awesome",
          "rapidRewards": "8349157375",
        },
        Object {
          "name": "Michael Lacy",
        },
      ]
    }
    priceTotal={
      Object {
        "isPointsChange": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": Object {
                "amount": "204.45",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "15.33",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "4.10",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "4.50",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "233.98",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
        },
      }
    }
    purchaseFlights={[Function]}
    rapidRewardsApplied={true}
    requireSecurityCodeForSavedCreditCard={true}
    savedCreditCards={
      Object {
        "otherCards": Array [
          Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "9999",
            "name": "VISA 9999",
            "savedCreditCardId": "1-ENKS5K",
            "type": "DISCOVER",
          },
        ],
        "primaryCard": Object {
          "_links": Object {
            "view": Object {
              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
              "method": "GET",
            },
          },
          "cvvVerified": true,
          "isExpired": false,
          "lastFourDigits": "4444",
          "name": "VISA 4444",
          "savedCreditCardId": "1-ENKS4K",
          "type": "VISA",
        },
        "requireSecurityCode": false,
      }
    }
    selectedIrn=""
    selectedSplitPay={420}
    shouldShowApplyRapidRewards={true}
    showEarlyBirdInPath={true}
    tripSummary={
      Object {
        "bounds": Array [
          Object {
            "arrivalAirportCode": "OAK",
            "arrivalTime": "01:30",
            "departureAirportCode": "LAS",
            "departureDate": "2017-11-27",
            "departureDayOfWeek": "Monday",
            "departureTime": "23:55",
            "stops": undefined,
          },
          Object {
            "arrivalAirportCode": "LAS",
            "arrivalTime": "01:30",
            "departureAirportCode": "OAK",
            "departureDate": "2017-11-28",
            "departureDayOfWeek": "Tuesday",
            "departureTime": "23:55",
            "stops": undefined,
          },
        ],
        "currency": Object {
          "amount": "234.30",
          "currencyCode": "USD",
          "currencySymbol": "$",
        },
        "passengerCountDescription": "2 Passenger Total",
      }
    }
  >
    <WithForm(PurchaseSummaryForm)
      EARLY_BIRD_AB_TESTING={false}
      asyncActionFinishFn={[Function]}
      asyncActionStartFn={[Function]}
      billingAddressFormData={null}
      clearFormDataByIdFn={[Function]}
      clickContactMethodFn={[Function]}
      companyName=""
      dutyOfCareContact={
        Object {
          "contactEmail": null,
          "contactMethod": null,
          "contactPhone": null,
          "disclaimerText": "This is a disclaimer",
          "legalVerbiage": "Dunder Mifflin Paper Company",
        }
      }
      earlyBirdEligibility={
        Object {
          "_meta": Object {
            "passengers": Array [
              Object {
                "accountNumber": null,
                "dateOfBirth": "1937-02-03",
                "gender": "M",
                "name": Object {
                  "firstName": "Charith",
                  "lastName": "Janusz",
                  "middleName": "",
                },
                "passengerReference": "2",
              },
            ],
          },
          "adultProductsCount": "1",
          "bounds": Array [
            Object {
              "_meta": Object {
                "products": Object {
                  "adult": Object {
                    "fare": Object {
                      "baseFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalFare": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "totalTaxesAndFees": Object {
                        "amount": "0.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                    },
                    "passengerReference": Array [
                      "2",
                    ],
                    "productId": "mockProductId",
                  },
                },
              },
              "flightNumbers": "#2795",
              "isEligible": true,
              "originDestinationAirports": "AUS - DAL",
              "passengersGroups": Array [
                Object {
                  "canPurchaseEarlyBird": true,
                  "decisionDescription": "1 Adult",
                  "fareType": "Wanna Get Away",
                  "isAlist": false,
                  "price": Object {
                    "amount": "15.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
            },
          ],
          "ineligibilityReasons": null,
          "seniorProductsCount": "0",
          "totalPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "unitPrice": Object {
            "amount": "15.00",
            "currencyCode": "USD",
            "currencySymbol": "$",
            "description": "per passenger, each way",
          },
        }
      }
      formId="A"
      handleFirmOfferOfCreditFn={[Function]}
      hideErrorHeaderMsgFn={[Function]}
      initialFormData={
        Object {
          "paymentInfo": Object {},
        }
      }
      isEarlyBirdOnPurchaseVisible={false}
      isInternationalBooking={false}
      onApplyRapidRewardsClick={[Function]}
      onClickBillingAddress={[Function]}
      onEarlyBirdCheckInClick={[Function]}
      onIrnInfoClick={[Function]}
      onParentOrGuardianItemClick={[Function]}
      onPassengerItemClick={[Function]}
      onPaymentEditClick={[Function]}
      onSubmit={[Function]}
      onSwitchEarlyBirdInPathButton={[Function]}
      onTripAndPriceClick={[Function]}
      onUnmount={[Function]}
      passengers={
        Array [
          Object {
            "name": "Amber Awesome",
            "rapidRewards": "8349157375",
          },
          Object {
            "name": "Michael Lacy",
          },
        ]
      }
      priceTotal={
        Object {
          "isPointsChange": false,
          "totals": Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": Object {
                  "amount": "204.45",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "15.33",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "4.10",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "4.50",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "233.98",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "233.98",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
          },
        }
      }
      purchaseFlights={[Function]}
      rapidRewardsApplied={true}
      requireSecurityCodeForSavedCreditCard={true}
      restrictFormChangeToFieldNameFn={[Function]}
      savedCreditCards={
        Object {
          "otherCards": Array [
            Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "9999",
              "name": "VISA 9999",
              "savedCreditCardId": "1-ENKS5K",
              "type": "DISCOVER",
            },
          ],
          "primaryCard": Object {
            "_links": Object {
              "view": Object {
                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                "method": "GET",
              },
            },
            "cvvVerified": true,
            "isExpired": false,
            "lastFourDigits": "4444",
            "name": "VISA 4444",
            "savedCreditCardId": "1-ENKS4K",
            "type": "VISA",
          },
          "requireSecurityCode": false,
        }
      }
      selectedIrn=""
      selectedSplitPay={420}
      shouldShowApplyRapidRewards={true}
      showDialogFn={[Function]}
      showEarlyBirdInPath={true}
      showErrorHeaderMsgFn={[Function]}
      tripSummary={
        Object {
          "bounds": Array [
            Object {
              "arrivalAirportCode": "OAK",
              "arrivalTime": "01:30",
              "departureAirportCode": "LAS",
              "departureDate": "2017-11-27",
              "departureDayOfWeek": "Monday",
              "departureTime": "23:55",
              "stops": undefined,
            },
            Object {
              "arrivalAirportCode": "LAS",
              "arrivalTime": "01:30",
              "departureAirportCode": "OAK",
              "departureDate": "2017-11-28",
              "departureDayOfWeek": "Tuesday",
              "departureTime": "23:55",
              "stops": undefined,
            },
          ],
          "currency": Object {
            "amount": "234.30",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "passengerCountDescription": "2 Passenger Total",
        }
      }
      unrestrictFormChangeToFieldNameFn={[Function]}
      updateFormFieldDataValueFn={[Function]}
    >
      <PurchaseSummaryForm
        EARLY_BIRD_AB_TESTING={false}
        asyncActionFinishFn={[Function]}
        asyncActionStartFn={[Function]}
        billingAddressFormData={null}
        clearFormDataByIdFn={[Function]}
        clickContactMethodFn={[Function]}
        companyName=""
        declineNotifications={false}
        dutyOfCareContact={
          Object {
            "contactEmail": null,
            "contactMethod": null,
            "contactPhone": null,
            "disclaimerText": "This is a disclaimer",
            "legalVerbiage": "Dunder Mifflin Paper Company",
          }
        }
        earlyBirdEligibility={
          Object {
            "_meta": Object {
              "passengers": Array [
                Object {
                  "accountNumber": null,
                  "dateOfBirth": "1937-02-03",
                  "gender": "M",
                  "name": Object {
                    "firstName": "Charith",
                    "lastName": "Janusz",
                    "middleName": "",
                  },
                  "passengerReference": "2",
                },
              ],
            },
            "adultProductsCount": "1",
            "bounds": Array [
              Object {
                "_meta": Object {
                  "products": Object {
                    "adult": Object {
                      "fare": Object {
                        "baseFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalFare": Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                        "totalTaxesAndFees": Object {
                          "amount": "0.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        },
                      },
                      "passengerReference": Array [
                        "2",
                      ],
                      "productId": "mockProductId",
                    },
                  },
                },
                "flightNumbers": "#2795",
                "isEligible": true,
                "originDestinationAirports": "AUS - DAL",
                "passengersGroups": Array [
                  Object {
                    "canPurchaseEarlyBird": true,
                    "decisionDescription": "1 Adult",
                    "fareType": "Wanna Get Away",
                    "isAlist": false,
                    "price": Object {
                      "amount": "15.00",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
              },
            ],
            "ineligibilityReasons": null,
            "seniorProductsCount": "0",
            "totalPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "unitPrice": Object {
              "amount": "15.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
              "description": "per passenger, each way",
            },
          }
        }
        formData={
          Object {
            "internalReferenceNumber": "",
            "isEarlyBirdInPathRadioButtonChecked": false,
            "paymentInfo": Object {
              "selectedCardId": "1-ENKS4K",
            },
            "purposeOfTravel": "",
            "securityCode": "",
            "travelFundsAddress": null,
          }
        }
        formId="A"
        handleFirmOfferOfCreditFn={[Function]}
        hideErrorHeaderMsgFn={[Function]}
        initialFormData={
          Object {
            "paymentInfo": Object {},
          }
        }
        isEarlyBirdOnPurchaseVisible={false}
        isInternationalBooking={false}
        onApplyRapidRewardsClick={[Function]}
        onChange={[Function]}
        onClickBillingAddress={[Function]}
        onEarlyBirdCheckInClick={[Function]}
        onIrnInfoClick={[Function]}
        onParentOrGuardianItemClick={[Function]}
        onPassengerItemClick={[Function]}
        onPaymentEditClick={[Function]}
        onSubmit={[Function]}
        onSwitchEarlyBirdInPathButton={[Function]}
        onTripAndPriceClick={[Function]}
        onUnmount={[Function]}
        passengers={
          Array [
            Object {
              "name": "Amber Awesome",
              "rapidRewards": "8349157375",
            },
            Object {
              "name": "Michael Lacy",
            },
          ]
        }
        priceTotal={
          Object {
            "isPointsChange": false,
            "totals": Object {
              "adultFare": Object {
                "baseFare": Object {
                  "discount": null,
                  "fare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "totalBaseFare": Object {
                    "amount": "204.45",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                "paxTypeTotal": Object {
                  "moneyTotal": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "pointsTotal": null,
                },
                "taxesAndFees": Array [
                  Object {
                    "description": "Excise Taxes",
                    "fee": Object {
                      "amount": "15.33",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Security Fee",
                    "fee": Object {
                      "amount": "5.60",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Segment Fee",
                    "fee": Object {
                      "amount": "4.10",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                  Object {
                    "description": "Passenger Facility Charge",
                    "fee": Object {
                      "amount": "4.50",
                      "currencyCode": "USD",
                      "currencySymbol": "$",
                    },
                  },
                ],
                "totalPerPassenger": Object {
                  "money": Object {
                    "amount": "233.98",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                  "passengerCount": 1,
                  "points": null,
                },
              },
              "moneyTotal": Object {
                "amount": "233.98",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
          }
        }
        purchaseFlights={[Function]}
        rapidRewardsApplied={true}
        requireSecurityCodeForSavedCreditCard={true}
        restrictFormChangeToFieldNameFn={[Function]}
        savedCreditCards={
          Object {
            "otherCards": Array [
              Object {
                "_links": Object {
                  "view": Object {
                    "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                    "method": "GET",
                  },
                },
                "cvvVerified": true,
                "isExpired": false,
                "lastFourDigits": "9999",
                "name": "VISA 9999",
                "savedCreditCardId": "1-ENKS5K",
                "type": "DISCOVER",
              },
            ],
            "primaryCard": Object {
              "_links": Object {
                "view": Object {
                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                  "method": "GET",
                },
              },
              "cvvVerified": true,
              "isExpired": false,
              "lastFourDigits": "4444",
              "name": "VISA 4444",
              "savedCreditCardId": "1-ENKS4K",
              "type": "VISA",
            },
            "requireSecurityCode": false,
          }
        }
        selectedIrn=""
        selectedSplitPay={420}
        shouldShowApplyRapidRewards={true}
        showDialogFn={[Function]}
        showEarlyBirdInPath={true}
        showErrorHeaderMsgFn={[Function]}
        showSaveContactMethod={false}
        tripSummary={
          Object {
            "bounds": Array [
              Object {
                "arrivalAirportCode": "OAK",
                "arrivalTime": "01:30",
                "departureAirportCode": "LAS",
                "departureDate": "2017-11-27",
                "departureDayOfWeek": "Monday",
                "departureTime": "23:55",
                "stops": undefined,
              },
              Object {
                "arrivalAirportCode": "LAS",
                "arrivalTime": "01:30",
                "departureAirportCode": "OAK",
                "departureDate": "2017-11-28",
                "departureDayOfWeek": "Tuesday",
                "departureTime": "23:55",
                "stops": undefined,
              },
            ],
            "currency": Object {
              "amount": "234.30",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "passengerCountDescription": "2 Passenger Total",
          }
        }
        unrestrictFormChangeToFieldNameFn={[Function]}
        updateFormFieldDataValueFn={[Function]}
      >
        <Form
          className="purchase-summary-form purchase-content"
          data-qa="purchase-summary-form"
          disabled={false}
          formId="A"
          isWidget={false}
          name="air-booking-purchase"
          onSubmit={[Function]}
          stopSubmitPropagation={false}
        >
          <form
            className="purchase-summary-form purchase-content form"
            data-qa="purchase-summary-form"
            name="air-booking-purchase"
            noValidate={true}
            onSubmit={[Function]}
          >
            <fieldset
              disabled={false}
            >
              <dl
                className="shopping-summary"
              >
                <PurchaseSummarySecurityCodeHeader
                  isSavedCreditCardThatRequiresCVVMissing={false}
                  missingBillingAddress={false}
                  missingContactMethod={true}
                  missingPaymentMethod={false}
                >
                  <div
                    className="p5 purchase-summary--message"
                  >
                    <h4
                      className="xxlarge bold inline-block"
                    >
                      Almost there!
                    </h4>
                    <p
                      className="large"
                    >
                      Please check what's below and add any missing information.
                    </p>
                  </div>
                </PurchaseSummarySecurityCodeHeader>
                <dt
                  data-qa="passengers-section-title"
                >
                  PASSENGERS
                </dt>
                <dd>
                  <PassengerInfoSummary
                    onPassengerItemClick={[Function]}
                    passengers={
                      Array [
                        Object {
                          "name": "Amber Awesome",
                          "rapidRewards": "8349157375",
                        },
                        Object {
                          "name": "Michael Lacy",
                        },
                      ]
                    }
                  >
                    <div
                      className="passenger-info-summary"
                    >
                      <div
                        key="0"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Amber Awesome
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                      <div
                        key="1"
                      >
                        <NavItemLink
                          className="clearfix passenger-info-summary--item"
                          icon="keyboard-arrow-right"
                          iconClassName="nav-item-link--icon"
                          onClick={[Function]}
                        >
                          <a
                            className="nav-item-link clearfix passenger-info-summary--item"
                            onClick={[Function]}
                          >
                            <div
                              className="fullwidth nowrap overflow-hidden ellipsis pr6"
                            >
                              <span
                                className="passenger-info-summary--passenger-name"
                                data-qa="passenger-info-summary--passenger-name"
                              >
                                Michael Lacy
                              </span>
                            </div>
                            <Icon
                              className="nav-item-link--icon"
                              type="keyboard-arrow-right"
                            >
                              <i
                                className="nav-item-link--icon icon icon_keyboard-arrow-right"
                              />
                            </Icon>
                          </a>
                        </NavItemLink>
                      </div>
                    </div>
                  </PassengerInfoSummary>
                </dd>
                <WithFields(ContactMethodFields)
                  clickContactMethodFn={[Function]}
                  isOptional={false}
                  missingContactMethod={true}
                  names={
                    Array [
                      "contactMethodContent",
                    ]
                  }
                >
                  <ContactMethodFields
                    clickContactMethodFn={[Function]}
                    formData={Object {}}
                    isOptional={false}
                    missingContactMethod={true}
                    onChange={[Function]}
                  >
                    <Fields
                      className="contact-method"
                      label="CONTACT METHOD"
                      type="grouped"
                    >
                      <div
                        className="fields contact-method grouped"
                      >
                        <label
                          className="fields--label"
                        >
                          CONTACT METHOD
                        </label>
                        <WithField(FormNavItemField)
                          icon="exclamation-circle warning"
                          iconClassName=""
                          name="contactMethodContent"
                          onNavItemClick={[Function]}
                          placeholder="Contact method "
                        >
                          <Field
                            error={false}
                          >
                            <div
                              className="field"
                            >
                              <FormNavItemField
                                className=""
                                clearError={[Function]}
                                disabled={false}
                                icon="exclamation-circle warning"
                                iconClassName=""
                                name="contactMethodContent"
                                onChange={[Function]}
                                onNavItemClick={[Function]}
                                placeholder="Contact method "
                                shouldShowDisplayValue={true}
                                value=""
                              >
                                <NavItemLink
                                  className="nav-item-field"
                                  disabled={false}
                                  icon="exclamation-circle warning"
                                  iconClassName=""
                                  name="contactMethodContent"
                                  onClick={[Function]}
                                >
                                  <a
                                    className="nav-item-link nav-item-field"
                                    name="contactMethodContent"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="fullwidth"
                                    >
                                      <span>
                                        Contact method 
                                      </span>
                                      <div
                                        className="nav-item-field-value"
                                        data-qa="nav-item-field-value"
                                      />
                                    </div>
                                    <Icon
                                      className=""
                                      type="exclamation-circle warning"
                                    >
                                      <i
                                        className="icon icon_exclamation-circle warning"
                                      />
                                    </Icon>
                                  </a>
                                </NavItemLink>
                              </FormNavItemField>
                            </div>
                          </Field>
                        </WithField(FormNavItemField)>
                      </div>
                    </Fields>
                  </ContactMethodFields>
                </WithFields(ContactMethodFields)>
                <dt
                  data-qa="your-trip-section-title"
                >
                  YOUR TRIP
                </dt>
                <dd>
                  <TripSummary
                    bounds={
                      Array [
                        Object {
                          "arrivalAirportCode": "OAK",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "LAS",
                          "departureDate": "2017-11-27",
                          "departureDayOfWeek": "Monday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                        Object {
                          "arrivalAirportCode": "LAS",
                          "arrivalTime": "01:30",
                          "departureAirportCode": "OAK",
                          "departureDate": "2017-11-28",
                          "departureDayOfWeek": "Tuesday",
                          "departureTime": "23:55",
                          "stops": undefined,
                        },
                      ]
                    }
                    currency={
                      Object {
                        "amount": "234.30",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      }
                    }
                    onTripAndPriceClick={[Function]}
                    passengerCountDescription="2 Passenger Total"
                  >
                    <div
                      className="trip-summary"
                    >
                      <BriefBound
                        arrivalAirportCode="OAK"
                        arrivalTime="01:30"
                        departureAirportCode="LAS"
                        departureDate="2017-11-27"
                        departureDayOfWeek="Monday"
                        departureTime="23:55"
                        key="0"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 27
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Monday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <BriefBound
                        arrivalAirportCode="LAS"
                        arrivalTime="01:30"
                        departureAirportCode="OAK"
                        departureDate="2017-11-28"
                        departureDayOfWeek="Tuesday"
                        departureTime="23:55"
                        key="1"
                      >
                        <div
                          className="flight-brief-summary bgwhite bdb p5"
                        >
                          <div
                            className="flex xlarge pdkblue bold"
                          >
                            <div
                              className="flex4"
                            >
                              Nov 28
                            </div>
                            <div
                              className="flex2"
                            >
                              OAK
                            </div>
                            <div
                              className="flex2 flight-brief-summary--airplane center"
                            >
                              <Icon
                                className="mt3"
                                type="airplane"
                              >
                                <i
                                  className="mt3 icon icon_airplane"
                                />
                              </Icon>
                            </div>
                            <div
                              className="flex2"
                            >
                              LAS
                            </div>
                          </div>
                          <div
                            className="flex large gray4"
                          >
                            <div
                              className="flex4"
                            >
                              Tuesday
                            </div>
                            <FlightTime
                              className="flex2"
                              timeString="23:55"
                            >
                              <div
                                className="flex2 flight-time"
                              >
                                <div
                                  className="flight-time--time"
                                >
                                  <span>
                                    11:55
                                  </span>
                                  <span
                                    className="time-period"
                                  >
                                    PM
                                  </span>
                                </div>
                              </div>
                            </FlightTime>
                            <div
                              className="flex2"
                            />
                            <div
                              className="flight-brief-summary--summary-group"
                            >
                              <FlightTime
                                className="flex2"
                                timeString="01:30"
                              >
                                <div
                                  className="flex2 flight-time"
                                >
                                  <div
                                    className="flight-time--time"
                                  >
                                    <span>
                                      1:30
                                    </span>
                                    <span
                                      className="time-period"
                                    >
                                      AM
                                    </span>
                                  </div>
                                </div>
                              </FlightTime>
                              <MultiDayIndicator
                                isOvernight={false}
                              />
                            </div>
                          </div>
                        </div>
                      </BriefBound>
                      <TitleAndPrice
                        currency={
                          Object {
                            "amount": "234.30",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        message="2 Passenger Total"
                      >
                        <div
                          className="title-and-price flex bgwhite py5 px5 bdb larger"
                        >
                          <span
                            className="flex7 gray4 inline-block"
                          >
                            2 Passenger Total
                          </span>
                          <div
                            className="flex5 align-right bold normal"
                          >
                            <Currency
                              amount="234.30"
                              currencyCode="USD"
                              currencySymbol="$"
                            >
                              <div
                                className="currency"
                              >
                                <span
                                  className="money-sign"
                                >
                                  $
                                </span>
                                <span
                                  data-qa="total-amount"
                                >
                                  234.30
                                </span>
                              </div>
                            </Currency>
                          </div>
                        </div>
                      </TitleAndPrice>
                      <NavItemLink
                        className="bgwhite"
                        icon="keyboard-arrow-right"
                        iconClassName="nav-item-link--icon"
                        onClick={[Function]}
                      >
                        <a
                          className="nav-item-link bgwhite"
                          onClick={[Function]}
                        >
                          Trip and price details
                          <Icon
                            className="nav-item-link--icon"
                            type="keyboard-arrow-right"
                          >
                            <i
                              className="nav-item-link--icon icon icon_keyboard-arrow-right"
                            />
                          </Icon>
                        </a>
                      </NavItemLink>
                    </div>
                  </TripSummary>
                </dd>
                <dt
                  data-qa="purpose-of-travel-section-title"
                >
                  PURPOSE OF TRAVEL
                </dt>
                <dd>
                  <WithField(FormSelectField)
                    name="purposeOfTravel"
                    options={
                      Array [
                        Object {
                          "label": "Personal",
                          "value": "PERSONAL",
                        },
                        Object {
                          "label": "Business",
                          "value": "BUSINESS",
                        },
                        Object {
                          "label": "Both",
                          "value": "BOTH",
                        },
                      ]
                    }
                    placeholder="Select (optional)"
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <FormSelectField
                          clearError={[Function]}
                          name="purposeOfTravel"
                          onChange={[Function]}
                          onFocus={[Function]}
                          options={
                            Array [
                              Object {
                                "label": "Personal",
                                "value": "PERSONAL",
                              },
                              Object {
                                "label": "Business",
                                "value": "BUSINESS",
                              },
                              Object {
                                "label": "Both",
                                "value": "BOTH",
                              },
                            ]
                          }
                          placeholder="Select (optional)"
                          value=""
                        >
                          <Select
                            caretIcon={true}
                            disablePlaceholder={false}
                            iconFixed={true}
                            name="purposeOfTravel"
                            onChange={[Function]}
                            onFocus={[Function]}
                            options={
                              Array [
                                Object {
                                  "label": "Personal",
                                  "value": "PERSONAL",
                                },
                                Object {
                                  "label": "Business",
                                  "value": "BUSINESS",
                                },
                                Object {
                                  "label": "Both",
                                  "value": "BOTH",
                                },
                              ]
                            }
                            placeholder="Select (optional)"
                            value=""
                          >
                            <Input
                              caretIcon={true}
                              className="select-input icon-fixed"
                              disablePlaceholder={false}
                              formattedInput={
                                <select
                                  className="dropdown empty"
                                  data-qa="select-dropdown"
                                  name="purposeOfTravel"
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                  value=""
                                >
                                  <option
                                    className="placeholder"
                                    data-qa="dqa-enabled-option"
                                    disabled={false}
                                    value=""
                                  >
                                    Select (optional)
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="PERSONAL"
                                  >
                                    Personal
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BUSINESS"
                                  >
                                    Business
                                  </option>
                                  <option
                                    data-qa="dqa-enabled-option"
                                    value="BOTH"
                                  >
                                    Both
                                  </option>
                                </select>
                              }
                              formattedInputFill={true}
                              icon="caret-down"
                              iconFixed={true}
                              name="purposeOfTravel"
                              onFocus={[Function]}
                              onLabelClick={[Function]}
                              placeholder="Select (optional)"
                            >
                              <div
                                className="select-input icon-fixed formatted input"
                              >
                                <span
                                  className="formatted-input formatted-input--fill"
                                >
                                  <select
                                    className="dropdown empty"
                                    data-qa="select-dropdown"
                                    name="purposeOfTravel"
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    placeholder="Select (optional)"
                                    value=""
                                  >
                                    <option
                                      className="placeholder"
                                      data-qa="dqa-enabled-option"
                                      disabled={false}
                                      key="placeholder"
                                      value=""
                                    >
                                      Select (optional)
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="0"
                                      value="PERSONAL"
                                    >
                                      Personal
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="1"
                                      value="BUSINESS"
                                    >
                                      Business
                                    </option>
                                    <option
                                      data-qa="dqa-enabled-option"
                                      key="2"
                                      value="BOTH"
                                    >
                                      Both
                                    </option>
                                  </select>
                                </span>
                                <input
                                  className=""
                                  icon="caret-down"
                                  name="purposeOfTravel"
                                  onFocus={[Function]}
                                  placeholder="Select (optional)"
                                />
                                <Icon
                                  className=""
                                  key="icon"
                                  type="caret-down"
                                >
                                  <i
                                    className="icon icon_caret-down"
                                  />
                                </Icon>
                              </div>
                            </Input>
                          </Select>
                        </FormSelectField>
                      </div>
                    </Field>
                  </WithField(FormSelectField)>
                </dd>
                <dl>
                  <dt
                    className="purchase-summary-form--add-early-bird pt2"
                    onClick={[Function]}
                  >
                    ADD EARLYBIRD CHECK-IN
                    <sup>
                      ®
                    </sup>
                  </dt>
                  <dd>
                    <WithField(EarlyBirdInPathSwitchButtonField)
                      name="isEarlyBirdInPathRadioButtonChecked"
                      onClick={[Function]}
                      totalPrice={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                      unitPriceOutBound={
                        Object {
                          "amount": "15.00",
                          "currencyCode": "USD",
                          "currencySymbol": "$",
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <EarlyBirdInPathSwitchButtonField
                            clearError={[Function]}
                            name="isEarlyBirdInPathRadioButtonChecked"
                            onChange={[Function]}
                            onClick={[Function]}
                            totalPrice={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            unitPriceOutBound={
                              Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              }
                            }
                            value={false}
                          >
                            <div
                              className="bdb flex flex-main-between"
                            >
                              <div
                                className="bgwhite flex10 flex py4 pl5 "
                              >
                                <span
                                  className="bgwhite pdkblue bold larger"
                                  data-qa="add-early-bird-check-in--banner--total-price"
                                >
                                  <Currency
                                    amount="15.00"
                                    currencyCode="USD"
                                    currencySymbol="$"
                                  >
                                    <div
                                      className="currency"
                                    >
                                      <span
                                        className="money-sign"
                                      >
                                        $
                                      </span>
                                      <span
                                        data-qa="total-amount"
                                      >
                                        15.00
                                      </span>
                                    </div>
                                  </Currency>
                                </span>
                                <span
                                  className="gray4 pl1 medium"
                                  data-qa="add-early-bird-check-in--banner--per-passenger-message"
                                >
                                  <span>
                                    <Currency
                                      amount="15.00"
                                      className="inline-block"
                                      currencyCode="USD"
                                      currencySymbol="$"
                                      prefix="("
                                      suffix=" per passenger, each way)"
                                    >
                                      <div
                                        className="currency inline-block"
                                      >
                                        (
                                        <span
                                          className="money-sign"
                                        >
                                          $
                                        </span>
                                        <span
                                          data-qa="total-amount"
                                        >
                                          15.00
                                        </span>
                                         per passenger, each way)
                                      </div>
                                    </Currency>
                                  </span>
                                </span>
                              </div>
                              <div
                                className="bgwhite bdl relative early-bird-check-in--radio-button flex2"
                                data-qa="add-early-bird-check-in--radio-button"
                                onClick={[Function]}
                              >
                                <RadioButtonMark
                                  isChecked={false}
                                >
                                  <span
                                    className="radio-button--mark"
                                  >
                                    <span
                                      className="radio-input--mark"
                                    />
                                  </span>
                                </RadioButtonMark>
                              </div>
                            </div>
                          </EarlyBirdInPathSwitchButtonField>
                        </div>
                      </Field>
                    </WithField(EarlyBirdInPathSwitchButtonField)>
                    <EarlyBirdInPathBreakdown
                      EARLY_BIRD_AB_TESTING={false}
                      earlyBirdEligibility={
                        Object {
                          "_meta": Object {
                            "passengers": Array [
                              Object {
                                "accountNumber": null,
                                "dateOfBirth": "1937-02-03",
                                "gender": "M",
                                "name": Object {
                                  "firstName": "Charith",
                                  "lastName": "Janusz",
                                  "middleName": "",
                                },
                                "passengerReference": "2",
                              },
                            ],
                          },
                          "adultProductsCount": "1",
                          "bounds": Array [
                            Object {
                              "_meta": Object {
                                "products": Object {
                                  "adult": Object {
                                    "fare": Object {
                                      "baseFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalFare": Object {
                                        "amount": "15.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                      "totalTaxesAndFees": Object {
                                        "amount": "0.00",
                                        "currencyCode": "USD",
                                        "currencySymbol": "$",
                                      },
                                    },
                                    "passengerReference": Array [
                                      "2",
                                    ],
                                    "productId": "mockProductId",
                                  },
                                },
                              },
                              "flightNumbers": "#2795",
                              "isEligible": true,
                              "originDestinationAirports": "AUS - DAL",
                              "passengersGroups": Array [
                                Object {
                                  "canPurchaseEarlyBird": true,
                                  "decisionDescription": "1 Adult",
                                  "fareType": "Wanna Get Away",
                                  "isAlist": false,
                                  "price": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                              ],
                            },
                          ],
                          "ineligibilityReasons": null,
                          "seniorProductsCount": "0",
                          "totalPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "unitPrice": Object {
                            "amount": "15.00",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                            "description": "per passenger, each way",
                          },
                        }
                      }
                      isRadioButtonChecked={false}
                    />
                    <div
                      className="gray5 medium pt4 bggray2"
                      data-qa="add-early-bird-check-in--verbiage"
                    >
                      Automatic check-in at 36 hours prior to your flight's departure. This is before general check-in begins at 24 hours. This product is non-refundable.
                    </div>
                  </dd>
                </dl>
                <div
                  className="apply-rapid-rewards-nav-item"
                >
                  <dt
                    data-qa="apply-points-section-title"
                  >
                    APPLY CASH + POINTS
                  </dt>
                  <WithField(ApplyRapidRewardsNavItemField)
                    name="applyRapidRewards"
                    onNavItemClick={[Function]}
                    rapidRewardsApplied={true}
                  >
                    <Field
                      error={false}
                    >
                      <div
                        className="field"
                      >
                        <ApplyRapidRewardsNavItemField
                          clearError={[Function]}
                          name="applyRapidRewards"
                          onChange={[Function]}
                          onNavItemClick={[Function]}
                          rapidRewardsApplied={true}
                          value=""
                        >
                          <div
                            data-qa="review-form--apply-rapid-rewards-nav-item"
                          >
                            <NavItemLink
                              className="nav-item-field "
                              icon="keyboard-arrow-right"
                              iconClassName="nav-item-link--icon"
                              onClick={[Function]}
                            >
                              <a
                                className="nav-item-link nav-item-field "
                                onClick={[Function]}
                              >
                                <span>
                                  Cash+Points Applied
                                </span>
                                <Icon
                                  className="nav-item-link--icon"
                                  type="keyboard-arrow-right"
                                >
                                  <i
                                    className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                  />
                                </Icon>
                              </a>
                            </NavItemLink>
                          </div>
                        </ApplyRapidRewardsNavItemField>
                      </div>
                    </Field>
                  </WithField(ApplyRapidRewardsNavItemField)>
                </div>
                <div>
                  <dt
                    data-qa="payment-section-title"
                  >
                    PAYMENT METHOD
                  </dt>
                  <dd>
                    <WithField(PaymentNavItemField)
                      name="paymentInfo"
                      onNavItemClick={[Function]}
                      savedCreditCards={
                        Object {
                          "otherCards": Array [
                            Object {
                              "_links": Object {
                                "view": Object {
                                  "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                  "method": "GET",
                                },
                              },
                              "cvvVerified": true,
                              "isExpired": false,
                              "lastFourDigits": "9999",
                              "name": "VISA 9999",
                              "savedCreditCardId": "1-ENKS5K",
                              "type": "DISCOVER",
                            },
                          ],
                          "primaryCard": Object {
                            "_links": Object {
                              "view": Object {
                                "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                "method": "GET",
                              },
                            },
                            "cvvVerified": true,
                            "isExpired": false,
                            "lastFourDigits": "4444",
                            "name": "VISA 4444",
                            "savedCreditCardId": "1-ENKS4K",
                            "type": "VISA",
                          },
                          "requireSecurityCode": false,
                        }
                      }
                    >
                      <Field
                        error={false}
                      >
                        <div
                          className="field"
                        >
                          <PaymentNavItemField
                            clearError={[Function]}
                            name="paymentInfo"
                            onChange={[Function]}
                            onNavItemClick={[Function]}
                            savedCreditCards={
                              Object {
                                "otherCards": Array [
                                  Object {
                                    "_links": Object {
                                      "view": Object {
                                        "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS5K",
                                        "method": "GET",
                                      },
                                    },
                                    "cvvVerified": true,
                                    "isExpired": false,
                                    "lastFourDigits": "9999",
                                    "name": "VISA 9999",
                                    "savedCreditCardId": "1-ENKS5K",
                                    "type": "DISCOVER",
                                  },
                                ],
                                "primaryCard": Object {
                                  "_links": Object {
                                    "view": Object {
                                      "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                      "method": "GET",
                                    },
                                  },
                                  "cvvVerified": true,
                                  "isExpired": false,
                                  "lastFourDigits": "4444",
                                  "name": "VISA 4444",
                                  "savedCreditCardId": "1-ENKS4K",
                                  "type": "VISA",
                                },
                                "requireSecurityCode": false,
                              }
                            }
                            value={
                              Object {
                                "selectedCardId": "1-ENKS4K",
                              }
                            }
                          >
                            <div
                              className="payment-nav-item-field"
                              data-qa="review-form--payment-method-nav-item"
                            >
                              <NavItemLink
                                className="no-padding"
                                icon="keyboard-arrow-right"
                                iconClassName="nav-item-link--icon"
                                onClick={[Function]}
                              >
                                <a
                                  className="nav-item-link no-padding"
                                  onClick={[Function]}
                                >
                                  <div
                                    className="primary-saved-credit-cards"
                                    data-qa="review-form--payment-card"
                                  >
                                    <SavedCreditCardRadioInput
                                      creditCardInfo={
                                        Object {
                                          "_links": Object {
                                            "view": Object {
                                              "href": "/v1/mobile-misc/page/air-booking/payment-options/1-ENKS4K",
                                              "method": "GET",
                                            },
                                          },
                                          "cvvVerified": true,
                                          "isExpired": false,
                                          "lastFourDigits": "4444",
                                          "name": "VISA 4444",
                                          "savedCreditCardId": "1-ENKS4K",
                                          "type": "VISA",
                                        }
                                      }
                                      justAdded={false}
                                      onClick={[Function]}
                                      selected={true}
                                      showRadioButton={false}
                                    >
                                      <CreditCardRadioInput
                                        name="VISA 4444"
                                        onClick={[Function]}
                                        savedCreditCardId="1-ENKS4K"
                                        selected={true}
                                        showRadioButton={false}
                                        type="VISA"
                                      >
                                        <div
                                          className="credit-card-radio-input credit-card-radio-input_selected"
                                          onClick={[Function]}
                                        >
                                          <label
                                            className="credit-card-radio-input--label"
                                          >
                                            <div
                                              className="credit-card-radio-input--container"
                                            >
                                              <CreditCardImage
                                                cardType="VISA"
                                              >
                                                <div
                                                  className="credit-card--image_visa credit-card--image left mr2"
                                                />
                                              </CreditCardImage>
                                              <div
                                                className="credit-card-radio-input--text"
                                              >
                                                <p
                                                  className="pdkblue larger"
                                                >
                                                  VISA 4444
                                                </p>
                                                <div
                                                  className="flex gray5 additional-info-container"
                                                >
                                                  <div
                                                    className="mr1"
                                                  >
                                                    Last 4 digits: 
                                                  </div>
                                                  <div
                                                    className="bold"
                                                  >
                                                    4444
                                                  </div>
                                                </div>
                                              </div>
                                            </div>
                                          </label>
                                        </div>
                                      </CreditCardRadioInput>
                                    </SavedCreditCardRadioInput>
                                  </div>
                                  <Icon
                                    className="nav-item-link--icon"
                                    type="keyboard-arrow-right"
                                  >
                                    <i
                                      className="nav-item-link--icon icon icon_keyboard-arrow-right"
                                    />
                                  </Icon>
                                </a>
                              </NavItemLink>
                            </div>
                          </PaymentNavItemField>
                        </div>
                      </Field>
                    </WithField(PaymentNavItemField)>
                  </dd>
                  <dd>
                    <SecurityCodeInputField
                      name="securityCode"
                      shouldShowSecurityInputField={false}
                      showWarningIcon={true}
                    />
                  </dd>
                </div>
              </dl>
              <div
                className="purchase-content--summary-footer"
              >
                <PriceTotal
                  earlyBirdEligibility={
                    Object {
                      "_meta": Object {
                        "passengers": Array [
                          Object {
                            "accountNumber": null,
                            "dateOfBirth": "1937-02-03",
                            "gender": "M",
                            "name": Object {
                              "firstName": "Charith",
                              "lastName": "Janusz",
                              "middleName": "",
                            },
                            "passengerReference": "2",
                          },
                        ],
                      },
                      "adultProductsCount": "1",
                      "bounds": Array [
                        Object {
                          "_meta": Object {
                            "products": Object {
                              "adult": Object {
                                "fare": Object {
                                  "baseFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalFare": Object {
                                    "amount": "15.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                  "totalTaxesAndFees": Object {
                                    "amount": "0.00",
                                    "currencyCode": "USD",
                                    "currencySymbol": "$",
                                  },
                                },
                                "passengerReference": Array [
                                  "2",
                                ],
                                "productId": "mockProductId",
                              },
                            },
                          },
                          "flightNumbers": "#2795",
                          "isEligible": true,
                          "originDestinationAirports": "AUS - DAL",
                          "passengersGroups": Array [
                            Object {
                              "canPurchaseEarlyBird": true,
                              "decisionDescription": "1 Adult",
                              "fareType": "Wanna Get Away",
                              "isAlist": false,
                              "price": Object {
                                "amount": "15.00",
                                "currencyCode": "USD",
                                "currencySymbol": "$",
                              },
                            },
                          ],
                        },
                      ],
                      "ineligibilityReasons": null,
                      "seniorProductsCount": "0",
                      "totalPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "unitPrice": Object {
                        "amount": "15.00",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                        "description": "per passenger, each way",
                      },
                    }
                  }
                  isPointsChange={false}
                  shouldHidePriceBreakdown={false}
                  showEarlyBirdInFareBreakdown={false}
                  totals={
                    Object {
                      "adultFare": Object {
                        "baseFare": Object {
                          "discount": null,
                          "fare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "totalBaseFare": Object {
                            "amount": "204.45",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                        },
                        "paxTypeTotal": Object {
                          "moneyTotal": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "pointsTotal": null,
                        },
                        "taxesAndFees": Array [
                          Object {
                            "description": "Excise Taxes",
                            "fee": Object {
                              "amount": "15.33",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Security Fee",
                            "fee": Object {
                              "amount": "5.60",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Segment Fee",
                            "fee": Object {
                              "amount": "4.10",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                          Object {
                            "description": "Passenger Facility Charge",
                            "fee": Object {
                              "amount": "4.50",
                              "currencyCode": "USD",
                              "currencySymbol": "$",
                            },
                          },
                        ],
                        "totalPerPassenger": Object {
                          "money": Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          },
                          "passengerCount": 1,
                          "points": null,
                        },
                      },
                      "moneyTotal": Object {
                        "amount": "233.98",
                        "currencyCode": "USD",
                        "currencySymbol": "$",
                      },
                      "pointsTotal": null,
                    }
                  }
                >
                  <div
                    className="price-total"
                  >
                    <div
                      className="price-total--info"
                    >
                      <PriceTotalLine
                        title="Total"
                        total={
                          Object {
                            "amount": "233.98",
                            "currencyCode": "USD",
                            "currencySymbol": "$",
                          }
                        }
                        type="total"
                      >
                        <div
                          className="price-line"
                        >
                          <span
                            className="price-line--title"
                          >
                            Total
                          </span>
                          <div
                            className="price-amount"
                          >
                            <div
                              className="price-line--currency_total"
                            >
                              <Currency
                                amount="233.98"
                                currencyCode="USD"
                                currencySymbol="$"
                                showPts={false}
                              >
                                <div
                                  className="currency"
                                >
                                  <span
                                    className="money-sign"
                                  >
                                    $
                                  </span>
                                  <span
                                    data-qa="total-amount"
                                  >
                                    233.98
                                  </span>
                                </div>
                              </Currency>
                            </div>
                          </div>
                        </div>
                      </PriceTotalLine>
                      <div
                        className="table fullwidth mt3"
                      >
                        <div
                          className="price-total--info-col"
                        >
                          <p>
                            Includes taxes and fees
                          </p>
                        </div>
                        <div
                          className="price-total--info-col"
                          data-qa="toggleBreakdown"
                          onClick={[Function]}
                        >
                          <p>
                            Show fare breakdown
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </PriceTotal>
                <div
                  className="purchase-disclaimer"
                >
                  By tapping 'Purchase', you accept the below conditions
                </div>
                <div
                  className="purchase-content--summary-footer-nav"
                >
                  <Button
                    className="purchase"
                    color="yellow"
                    fluid={true}
                    size="larger"
                    type="submit"
                  >
                    <button
                      className="purchase button button--fluid larger button--yellow"
                      onClick={[Function]}
                      type="submit"
                    >
                      Purchase
                    </button>
                  </Button>
                </div>
              </div>
            </fieldset>
          </form>
        </Form>
      </PurchaseSummaryForm>
    </WithForm(PurchaseSummaryForm)>
  </Connect(WithForm(PurchaseSummaryForm))>
</Provider>
`;
