// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#Air Change Pricing Summary page render header and bound detail one way trip should pass header to page header and one way bound 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <AirChangeSummaryPage
    accountRedeemablePoints={0}
    changePricingPage={
      Object {
        "_links": Object {
          "calculateFunds": Object {
            "body": Object {
              "fundsAppliedToken": null,
              "itineraryPricingToken": "asdf1234",
            },
            "href": "/v1/mobile-air-booking/page/change/calculate-funds",
            "method": "POST",
          },
          "changeConfirmationPage": Object {
            "body": Object {
              "changeSession": Object {
                "inboundBoundReference": null,
                "outboundBoundReference": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..9QAJrVnET67PZHBTzNhLBw.BUsa2Eiy2O28pHC-4PK-VRgp0VicM3lerADS-JAdZ9OO1H-oV20UzDGN7Lt5xzBlgt7pcJ86ZAio3VX6CFEAC-k1AeJHXJxBcVnldT3MJS1LGGRKxrLz3IqKhTML9nZKrn71_QQuyMtWk2AnbOIegt8NZHeAp1Rx7hJpSkt8g8z5m3sLUkvbl0uF_eQX6wt0KtPWOr6GCmLdnDliZLSWRWd65bm5plJ49d05VVwR7u4jRRvNSE0oadmOvHGIX7lYipGAJKdvy9NK1Znsr6km588z-p_AxWtUW1qob1JduqHqLuHglTrlnleDqsqtc8O-_8OhlI2i3whBKf4543TPyb3u1gv4jwOKyhRngEb6HfU2l29RQYz2bwsWm0uIurVQjnh9mD54ghosHtSvUoCqEuqszHTOhw7Nd0jS4GpbwlqWEwF6WCo4cyNHaoctGmeXTurcihsMGMnW3kgGFY1RU1FAXsJXJ_INJr1cvsjXZWgwAtkwkVZsynb20kvRcgaR8E0dEBZZiSDCSLTVGgHS9IXpUhA1-NS58kFyu6-BewrnYsRzxsJdc6a97J2lkj27lCer9A3G5Ci0cI1R-UdPXmaZs-RZGF8rkuKn7AwyFfhDUs0FtSB2hwH2eaOJ4wqG7GpVacIf-O-wjhPfaOoDucJtiYX3KeYVkiJE3WOV6ANI0fFDfclLhupRLRX7lYYx6ZdIkkbKjUMG4WlVrRdhQOdwJDre2R4ks6wiLICXu_TMhWO7TCDtzCTZYu4dy0o-pAgztLuHtZZ_KrI6_kr_jh08dk_6DvAXWMJDj60vrFWqMZCZn_eFcwpWTRqbAjl-gRtVR82MY8GLBeboZgnsFqUE6hTRHfdemsThwyN-dHTCF8WxyxHmfm0PhFMLOEO8uSs9M4VoHWpmXGKNuPF22gE-koSXvA1r1_8G0YNrdNPAVigImPHrbXpD-LUU2PvcZPXHbRhRj8bCloVz6FUCu8VfvBMxw7VNSLEm1lhdUBJ8Z4FdB8t__KqEqKO1lXVdzGxVFfJ5HlK-HQcgEoM2R166IPRmZ52UqKSQBa0GesMT_S5zgkyZIbRN62xqe60WutLCTW7ihZrnN32llEPvlxMC23AFcipTwFDuFr_32j9EzVZD05RGViIei521bjoOzA90kZv2T5LOi6XMK3gXMybm6WvUnwYNgPMLisErYR2n-bgiyDzs760vLydbD9gycNT9m4MRHpo5aaxX-Ts5U8rc9uFXztchoGSDpiQbfrQmDH2bfC5eZK9ZYHy7eZW2y5zWhakZ4OCIRhkGgqftm4-JxBduUy9cJ2-zvvJziFQ4S9K4VOVfJ1lMg8LqFVpzM6sVE0okBtZ3XejJFxOP4dQZY2l3madaLk5NZ_KNnOQyZ-ovGVxmm94LlScqOT42tREbf_73lvcn6Wt2ATENVWRPZTc7yGX7a8zbDtSX6pnz-fbbG3_om5HyjtOUhHgd-nxt4Lng5r6NvGmZvyY3DAOh_gkHpjumCOiy4Rj9WSgfeWDDHsUr0_aaj0VXXPmwOrfeCMA95RBnpC923qPXEO7G63a3jFi1SKQhR5uuGkdrZ_dBdw0klmLjItj4g0TSy8atH5kF8utN5XShz0bGdNosaZ6O7peyKRX4tye2sJGJ_DvqIqT1EbDwbfBm4c1xE__lxmvzHP1rlhk7QxnDPyR4-DpLb320lvP0yebbgCed1SbphbVKNWMAAy4h0U9fFial26zZ-AWqIrtIb0cmLxbcCLehzEPpfPDEuaiipef_bEVjhIq7LICyQh11Ai2b7T9HzE-uVcdOTvc1kMOjZAda2pqsKqNl2OWUQuBqd39FcUqMhrAODDBMZd3tLZXwIbv8Uk3hpzLEiF2XNeSJNWIyY2qoagpRC9C-DkWX9c3Dj01x7JkWD8NH4XfxkTBVX9P-AvLjhgkausSntPIAuww5W1QwmrBMmxvtIh4XJBYM_aOKDjT0CMNDY_13CiXsiY664AKiDgBz18foD19Q_xQUCWAPLQ6toHCXIP0On_-HVnoV0-rggk2M8VoaIh-6_uCDfhh7263eypgh3FeSZX6BcPzyAml1vALmvvwqAloDjpD0j4pferqXzcMEHU5nWB4Fzw-cxcLXvH1HE67PZt1x4vr_NqKVU1pNniceMT2BN1r3ze-QB-OJ3XuZ465ugKnnXmyeBOLDG2ukcKtKPheNawJzJx8t4HGTjgOGz4AGkZ70mgyk1FP-goola9wXDou83XQfzpw8MvfTM9eaVKevRwUt1YYratgrLxhhfsJjbafX4NnjBWq1UzxHb9HPkPifHedIgIK6_MPDNrgTmsQhhPoOmqWuH9ATfJFu5k9OagmFX0B8hTI2QJk5HGsFYRFBuGUaQyZP-5IdDq-c2inD1QScm-HNdSf7TcLtm6pwgbPc9RE5JxcQ9YFuXgfS.ny96ufWsUugcagT1rrvnZw",
              },
              "newFlightToken": "eyJwYXltZW50UmVxdWlyZWQiOmZhbHNlLCJyZWZ1bmRSZXF1aXJlZCI6ZmFsc2UsImhhc05vblJlZnVuZGFibGUiOmZhbHNlLCJib3VuZHMiOlt7ImRlcGFydHVyZVRpbWUiOiIwNToxNSIsImRlcGFydHVyZURhdGUiOiIyMDE4LTA1LTE4IiwiZnJvbUFpcnBvcnRDb2RlIjoiQUxCIiwidG9BaXJwb3J0Q29kZSI6IkFVUyIsImZsaWdodCI6IjY5NTYifSxudWxsXSwiaXRpbmVyYXJ5UHJpY2UiOnsicmVjb3JkVHlwZSI6IkZBUkUiLCJmYXJlUHJpY2luZ1R5cGUiOiJBRFVMVCIsImJhc2VGYXJlIjoiNTA1Ljg0IiwiZmFyZVRheGVzQW5kRmVlcyI6W3siY29kZSI6IkFZIiwiYW1vdW50IjoiNS42MCJ9LHsiY29kZSI6IlVTIiwiYW1vdW50IjoiMzcuOTQifSx7ImNvZGUiOiJYRiIsImFtb3VudCI6IjkuMDAifSx7ImNvZGUiOiJaUCIsImFtb3VudCI6IjguMjAifV0sInRvdGFsVGF4ZXNBbmRGZWUiOiI2MC43NCIsInRvdGFsRmFyZSI6IjU2Ni41OCIsInBheFR5cGVUb3RhbCI6IjU2Ni41OCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJjaGFuZ2VUeXBlIjoiUkVWQUxJREFURV9ET0NVTUVOVFMiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifSwiZGlmZmVyZW5jZUl0aW5lcmFyeVByaWNlIjp7InJlY29yZFR5cGUiOiJGQVJFIiwiYmFzZUZhcmUiOiIwLjAwIiwidG90YWxUYXhlc0FuZEZlZXMiOiIwLjAwIiwidG90YWxGYXJlIjoiMC4wMCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifX0=",
              "productIdToken": Object {
                "inbound": null,
                "outbound": "eyJwcm9kdWN0SWQiOiJBTll8QURUfFlMLFksQUxCLEJXSSwyMDE4LTA1LTE4VDA1OjE1LTA0OjAwLDIwMTgtMDUtMThUMDY6MzAtMDQ6MDAsV04sV04sNjk1Niw3M1d8WUwsWSxCV0ksQVVTLDIwMTgtMDUtMThUMDg6MTAtMDQ6MDAsMjAxOC0wNS0xOFQxMDo1MC0wNTowMCxXTixXTiwyNzYsNzNXIiwicXVvdGVkUHJpY2UiOiI1NjYuNTgiLCJpbnRlcm5hdGlvbmFsIjpmYWxzZSwiZmFyZVR5cGUiOiJBTlkifQ",
              },
            },
            "href": "/v1/mobile-air-booking/page/flights/x-change",
            "method": "PUT",
            "xhref": "/v1/mobile-air-booking/page/flights/x-change",
          },
        },
        "_meta": Object {
          "newCardHasSufficientFunds": false,
          "purchaseWithPoints": false,
        },
        "acceptanceText1": "Select cancel to change your flight selections.",
        "acceptanceText2": "By tapping continue, you accept the new price.",
        "accountNumber": null,
        "bounds": Array [
          Object {
            "arrivalAirport": Object {
              "code": "AUS",
              "country": null,
              "name": "Austin",
              "state": "TX",
            },
            "arrivalTime": "10:50",
            "boundType": "DEPARTING",
            "departureAirport": Object {
              "code": "ALB",
              "country": null,
              "name": "Albany",
              "state": "NY",
            },
            "departureDate": "2018-05-18",
            "departureTime": "05:15",
            "fareProductDetails": Object {
              "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
              "label": "Anytime",
            },
            "flights": Array [
              Object {
                "number": "6956",
                "wifiOnBoard": true,
              },
              Object {
                "number": "276",
                "wifiOnBoard": true,
              },
            ],
            "isNextDayArrival": false,
            "passengers": Array [
              Object {
                "bookingCode": "Y",
                "count": 1,
                "fareType": "Anytime",
                "type": "Adult",
              },
            ],
            "stops": Array [
              Object {
                "airport": Object {
                  "code": "BWI",
                  "country": null,
                  "name": "Baltimore/Washington",
                  "state": "MD",
                },
                "arrivalTime": "06:30",
                "changePlanes": true,
                "departureTime": "08:10",
              },
            ],
            "travelTime": "6h 35m",
          },
        ],
        "emailReceiptTo": "testemail@wnco.com",
        "fareRulesWithLinks": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
        "fareSummary": Object {
          "newAmountDue": Object {
            "fare": Object {
              "amount": "0.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Amount due",
            "tax": null,
          },
          "newTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "New trip cost",
            "tax": null,
          },
          "nonRefundable": null,
          "originalTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Original trip cost",
            "tax": null,
          },
          "refundable": null,
          "tax": null,
          "totalRefundability": null,
        },
        "hasNonRefundable": false,
        "header": "ALB - AUS (One Way)",
        "isRepriceNotification": true,
        "messages": Array [],
        "passengers": Array [
          Object {
            "displayName": "YANG LU",
            "firstName": "Yang",
            "lastName": "Lu",
          },
        ],
        "paymentRequired": false,
        "recordLocator": "WBYDCX",
        "refundRequired": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "505.84",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": null,
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "code": "AY",
                "description": "Sept 11 Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "US",
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "37.94",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "XF",
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "9.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "ZP",
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "8.20",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "566.58",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
          "seniorFare": null,
        },
      }
    }
    changeType={
      Object {
        "downGrade": false,
        "evenExchange": false,
        "upGrade": true,
      }
    }
    getAccountInfoFn={[Function]}
    hideDialogFn={[Function]}
    isLoggedIn={false}
    push={[Function]}
    resumeAfterLogin={false}
    resumeAfterLoginFn={[Function]}
    shouldResumeAfterLogin={false}
    showDialogFn={[Function]}
  >
    <div>
      <Connect(PageHeader)>
        <PageHeader
          hidden={false}
          isWebView={false}
          noPadding={false}
        >
          <div>
            <div
              className="page-header"
              id=""
            >
              <div>
                <span
                  className="inline-block mr4"
                >
                  Price
                </span>
                <span
                  className="normal inline-block mr2"
                  data-qa="airPort-codes"
                >
                  ALB - AUS (One Way)
                </span>
              </div>
            </div>
            <Connect(ErrorHeaderContainer)>
              <ErrorHeaderContainer
                errorMessage={null}
                hasError={false}
              >
                <div />
              </ErrorHeaderContainer>
            </Connect(ErrorHeaderContainer)>
          </div>
        </PageHeader>
      </Connect(PageHeader)>
      <ReservationFlightSummary
        bounds={
          Array [
            Object {
              "arrivalAirport": Object {
                "code": "AUS",
                "country": null,
                "name": "Austin",
                "state": "TX",
              },
              "arrivalTime": "10:50",
              "boundType": "DEPARTING",
              "departureAirport": Object {
                "code": "ALB",
                "country": null,
                "name": "Albany",
                "state": "NY",
              },
              "departureDate": "2018-05-18",
              "departureTime": "05:15",
              "fareProductDetails": Object {
                "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                "label": "Anytime",
              },
              "flights": Array [
                Object {
                  "number": "6956",
                  "wifiOnBoard": true,
                },
                Object {
                  "number": "276",
                  "wifiOnBoard": true,
                },
              ],
              "isNextDayArrival": false,
              "passengers": Array [
                Object {
                  "bookingCode": "Y",
                  "count": 1,
                  "fareType": "Anytime",
                  "type": "Adult",
                },
              ],
              "stops": Array [
                Object {
                  "airport": Object {
                    "code": "BWI",
                    "country": null,
                    "name": "Baltimore/Washington",
                    "state": "MD",
                  },
                  "arrivalTime": "06:30",
                  "changePlanes": true,
                  "departureTime": "08:10",
                },
              ],
              "travelTime": "6h 35m",
            },
          ]
        }
      >
        <div
          className="reservation-flight-summary"
        >
          <FlightSummaryCard
            boundDetail={
              Object {
                "arrivalAirport": Object {
                  "code": "AUS",
                  "country": null,
                  "name": "Austin",
                  "state": "TX",
                },
                "arrivalTime": "10:50",
                "boundType": "DEPARTING",
                "departureAirport": Object {
                  "code": "ALB",
                  "country": null,
                  "name": "Albany",
                  "state": "NY",
                },
                "departureDate": "2018-05-18",
                "departureTime": "05:15",
                "fareProductDetails": Object {
                  "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                  "label": "Anytime",
                },
                "flights": Array [
                  Object {
                    "number": "6956",
                    "wifiOnBoard": true,
                  },
                  Object {
                    "number": "276",
                    "wifiOnBoard": true,
                  },
                ],
                "isNextDayArrival": false,
                "stops": Array [
                  Object {
                    "airport": Object {
                      "code": "BWI",
                      "country": null,
                      "name": "Baltimore/Washington",
                      "state": "MD",
                    },
                    "arrivalTime": "06:30",
                    "changePlanes": true,
                    "departureTime": "08:10",
                  },
                ],
                "travelTime": "6h 35m",
              }
            }
            key="0"
          >
            <div
              className="flight-summary-card rd3 overflow-hidden"
            >
              <FlightSummaryCardHeader
                departureDate="Fri, May 18, 2018"
                isReturning={false}
              >
                <div
                  className="flight-summary-header flight-summary-departing"
                >
                  <span
                    className="flight-summary-title"
                  >
                    Departing
                  </span>
                  <span
                    className="flight-day"
                  >
                    Fri, May 18, 2018
                  </span>
                </div>
              </FlightSummaryCardHeader>
              <div
                className="flight-summary-content"
              >
                <div
                  className="pricing-summary--group"
                >
                  <FlightInfo
                    flights={
                      Array [
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "6956",
                        },
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "276",
                        },
                      ]
                    }
                    isTotalTravelDuration={true}
                    travelTime="6h 35m"
                  >
                    <div>
                      <div
                        className="flight-info"
                      >
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="FLIGHT"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                FLIGHT
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightNumberList
                                  flights={
                                    Array [
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "6956",
                                      },
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "276",
                                      },
                                    ]
                                  }
                                >
                                  <div
                                    className="flight-number-list flex-row"
                                  >
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="6956"
                                      key="0"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          6956
                                        </span>
                                      </span>
                                    </FlightNumber>
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="276"
                                      key="1"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          276
                                        </span>
                                      </span>
                                    </FlightNumber>
                                  </div>
                                </FlightNumberList>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="TOTAL TRAVEL TIME"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                TOTAL TRAVEL TIME
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <div
                                  className="flight-duration"
                                >
                                  <Icon
                                    title="color-stopwatch"
                                    type="color-stopwatch"
                                  >
                                    <i
                                      className="icon icon_color-stopwatch"
                                      title="color-stopwatch"
                                    />
                                  </Icon>
                                  <span
                                    data-qa="flight-duration-minutes"
                                  >
                                    6h 35m
                                  </span>
                                </div>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                      </div>
                    </div>
                  </FlightInfo>
                  <ItineraryVertical
                    boundDetail={
                      Object {
                        "arrivalAirport": Object {
                          "code": "AUS",
                          "country": null,
                          "name": "Austin",
                          "state": "TX",
                        },
                        "arrivalTime": "10:50",
                        "boundType": "DEPARTING",
                        "departureAirport": Object {
                          "code": "ALB",
                          "country": null,
                          "name": "Albany",
                          "state": "NY",
                        },
                        "departureDate": "2018-05-18",
                        "departureTime": "05:15",
                        "fareProductDetails": Object {
                          "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                          "label": "Anytime",
                        },
                        "flights": Array [
                          Object {
                            "number": "6956",
                            "wifiOnBoard": true,
                          },
                          Object {
                            "number": "276",
                            "wifiOnBoard": true,
                          },
                        ],
                        "isNextDayArrival": false,
                        "stops": Array [
                          Object {
                            "airport": Object {
                              "code": "BWI",
                              "country": null,
                              "name": "Baltimore/Washington",
                              "state": "MD",
                            },
                            "arrivalTime": "06:30",
                            "changePlanes": true,
                            "departureTime": "08:10",
                          },
                        ],
                        "travelTime": "6h 35m",
                      }
                    }
                  >
                    <div
                      className="itinerary-vertical"
                    >
                      <div
                        className="itinerary-vertical--row"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="DEPARTS"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                DEPARTS
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="05:15"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="05:15"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            5:15
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "ALB",
                                "airportName": "Albany",
                                "cityState": "NY",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                ALB
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Albany
                                , 
                                NY
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                      <Panel
                        collapsible={true}
                        header={
                          <div
                            className="itinerary-vertical--row"
                          >
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-icon"
                            >
                              <span
                                className="stop-circle"
                              >
                                 
                              </span>
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-line"
                            >
                               
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-info"
                            >
                              <StopDetailsText
                                displayAsTwoLine={true}
                                flightData={
                                  Object {
                                    "connectionAirportCode": "BWI",
                                    "isOvernight": false,
                                    "numberOfStops": 1,
                                  }
                                }
                                withIcon={true}
                              />
                            </div>
                          </div>
                        }
                        onSelect={[Function]}
                      >
                        <div
                          className="panel"
                          id={null}
                          onSelect={null}
                        >
                          <div
                            className="panel--heading"
                          >
                            <div
                              className="panel__title itinerary-vertical--row"
                            >
                              <a
                                aria-expanded="false"
                                className="panel-anchor collapsed"
                                href="#"
                                onClick={[Function]}
                              >
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-icon"
                                >
                                  <span
                                    className="stop-circle"
                                  >
                                     
                                  </span>
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-line"
                                >
                                   
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-info"
                                >
                                  <StopDetailsText
                                    displayAsTwoLine={true}
                                    flightData={
                                      Object {
                                        "connectionAirportCode": "BWI",
                                        "isOvernight": false,
                                        "numberOfStops": 1,
                                      }
                                    }
                                    withIcon={true}
                                  >
                                    <span
                                      className="stops-detail stops-detail--with-icon"
                                    >
                                      <span>
                                        1
                                         
                                        Stop
                                        <span>
                                          <span>
                                            : 
                                            <span
                                              className="stops-detail--icon"
                                            >
                                              <Icon
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="icon icon_airplane-return"
                                                />
                                              </Icon>
                                              <Icon
                                                className="stop-highlight"
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="stop-highlight icon icon_airplane-return"
                                                />
                                              </Icon>
                                            </span>
                                            <br />
                                          </span>
                                          Change planes
                                        </span>
                                         
                                        BWI
                                      </span>
                                    </span>
                                  </StopDetailsText>
                                </div>
                              </a>
                            </div>
                          </div>
                          <div
                            aria-expanded="false"
                            className="panel_collapsed collapse"
                            key="panel-header"
                          >
                            <div
                              className="panel--body"
                              key="0"
                            >
                              <Stop
                                key="0"
                                stop={
                                  Object {
                                    "airport": Object {
                                      "code": "BWI",
                                      "country": null,
                                      "name": "Baltimore/Washington",
                                      "state": "MD",
                                    },
                                    "arrivalTime": "06:30",
                                    "changePlanes": true,
                                    "departureTime": "08:10",
                                  }
                                }
                                stopNumber={1}
                                stopsTotalNumber={1}
                              >
                                <div
                                  className="itinerary-vertical--row itinerary-vertical--row--stop"
                                >
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-icon"
                                  >
                                    <span
                                      className="stop-circle"
                                    >
                                         
                                    </span>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-line"
                                  >
                                     
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-time"
                                  >
                                    <div
                                      className="flight-time-group"
                                    >
                                      <LabelContainer
                                        labelText="ARRIVES"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            ARRIVES
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="06:30"
                                              statusIconPosition="UNDER"
                                              timeString="06:30"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="06:30"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        6:30
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                      <LabelContainer
                                        labelText="DEPARTS"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            DEPARTS
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="08:10"
                                              statusIconPosition="UNDER"
                                              timeString="08:10"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="08:10"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        8:10
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                    </div>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-info"
                                  >
                                    <div
                                      className="stop-detail stop-detail--has-change"
                                    >
                                      <AirportInfo
                                        airportInfo={
                                          Object {
                                            "airportCode": "BWI",
                                          }
                                        }
                                      >
                                        <div
                                          className="airport-info"
                                        >
                                          <div
                                            className="airport-info--code"
                                          >
                                            BWI
                                          </div>
                                        </div>
                                      </AirportInfo>
                                      <div
                                        className="stop-detail__info italic"
                                      >
                                        Stop: 
                                        <span>
                                          Baltimore/Washington, MD
                                        </span>
                                      </div>
                                      <div
                                        className="stop-detail__status italic"
                                      >
                                        <span>
                                          Change planes
                                            
                                          <Icon
                                            className="stop-detail--airplane-return"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return icon icon_airplane-return"
                                            />
                                          </Icon>
                                          <Icon
                                            className="stop-detail--airplane-return highlight"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return highlight icon icon_airplane-return"
                                            />
                                          </Icon>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Stop>
                            </div>
                          </div>
                        </div>
                      </Panel>
                      <div
                        className="itinerary-vertical--row itinerary-vertical--arrival"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon itinerary-vertical--col-icon-none-line"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="ARRIVES"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                ARRIVES
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  isNextDay={false}
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="10:50"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="10:50"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            10:50
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator
                                          isNextDay={false}
                                        />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "AUS",
                                "airportName": "Austin",
                                "cityState": "TX",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                AUS
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Austin
                                , 
                                TX
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                    </div>
                  </ItineraryVertical>
                </div>
                <div
                  className="pricing-summary--group"
                >
                  <PassengerPrice
                    fareLabel="Anytime"
                    fareRulesUrl="https://mobile.southwest.com/fare-rules/anytime"
                    key="0"
                    passengerCount={1}
                    passengerType="Adult"
                  >
                    <div
                      className="passenger-price"
                    >
                      <div
                        className="passenger-price--info"
                      >
                        <span
                          className="passenger-price--number-and-type"
                          data-qa="passenger-price-passengers--number-and-type"
                        >
                          1
                           
                          Adult
                        </span>
                        <Connect(ContentLink)
                          className="passenger-price--fare-type"
                          dataQa="passenger-price--fare-type"
                          href="https://mobile.southwest.com/fare-rules/anytime"
                        >
                          <ContentLink
                            className="passenger-price--fare-type"
                            dataQa="passenger-price--fare-type"
                            href="https://mobile.southwest.com/fare-rules/anytime"
                            isWebView={false}
                          >
                            <a
                              className="passenger-price--fare-type"
                              data-qa="passenger-price--fare-type"
                              href="https://mobile.southwest.com/fare-rules/anytime"
                              target="_blank"
                            >
                              Anytime
                            </a>
                          </ContentLink>
                        </Connect(ContentLink)>
                      </div>
                    </div>
                  </PassengerPrice>
                </div>
              </div>
            </div>
          </FlightSummaryCard>
        </div>
      </ReservationFlightSummary>
      <PriceSummaryNotice
        fareRulesWithLinks="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
      >
        <div
          className="price-summary-notice"
        >
          <Connect(ContentLink)
            raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
          >
            <ContentLink
              isWebView={false}
              raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
                  }
                }
              />
            </ContentLink>
          </Connect(ContentLink)>
        </div>
      </PriceSummaryNotice>
      <AirChangePriceTotal
        change={
          Object {
            "downGrade": false,
            "evenExchange": false,
            "upGrade": true,
          }
        }
        fareSummary={
          Object {
            "newAmountDue": Object {
              "fare": Object {
                "amount": "0.00",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Amount due",
              "tax": null,
            },
            "newTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "New trip cost",
              "tax": null,
            },
            "nonRefundable": null,
            "originalTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Original trip cost",
              "tax": null,
            },
            "refundable": null,
            "tax": null,
            "totalRefundability": null,
          }
        }
        isPointsChange={false}
        totals={
          Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "505.84",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": null,
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "code": "AY",
                  "description": "Sept 11 Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "US",
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "37.94",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "XF",
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "9.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "ZP",
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "8.20",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
            "seniorFare": null,
          }
        }
      >
        <div
          className="air-change-price-total"
        >
          <div
            className="air-change-price-total--info"
          >
            <div
              className="pb5 mb5 bdb"
              data-qa="change-refund-summary--never-change"
            >
              We never charge change fees. You'll pay only the difference in fare.
            </div>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="Original trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  Original trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="New trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  New trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
          </div>
          <div>
            <div
              className="air-change-price-total--fare-summary"
            >
              <PriceTotalLine
                title="Amount due"
                total={
                  Object {
                    "amount": "0.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  }
                }
                type="total"
              >
                <div
                  className="price-line"
                >
                  <span
                    className="price-line--title"
                  >
                    Amount due
                  </span>
                  <div
                    className="price-amount"
                  >
                    <div
                      className="price-line--currency_total"
                    >
                      <Currency
                        amount="0.00"
                        currencyCode="USD"
                        currencySymbol="$"
                        showPts={false}
                      >
                        <div
                          className="currency"
                        >
                          <span
                            className="money-sign"
                          >
                            $
                          </span>
                          <span
                            data-qa="total-amount"
                          >
                            0.00
                          </span>
                        </div>
                      </Currency>
                    </div>
                  </div>
                </div>
              </PriceTotalLine>
            </div>
            <div
              className="air-change-price-total--fare-summary-note"
            >
              <div
                className="price-total--info-col"
              >
                <p>
                  Includes taxes and fees
                </p>
              </div>
            </div>
          </div>
        </div>
      </AirChangePriceTotal>
      <div
        className="p4 bgpblue"
      >
        <Button
          className="continue"
          color="yellow"
          fluid={true}
          onClick={[Function]}
          size="larger"
        >
          <button
            className="continue button button--fluid larger button--yellow"
            onClick={[Function]}
            type="button"
          >
            Continue
          </button>
        </Button>
      </div>
    </div>
  </AirChangeSummaryPage>
</Provider>
`;

exports[`#Air Change Pricing Summary page render header and bound detail round trip should pass round trip header to page header and pass round trip bounds 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <AirChangeSummaryPage
    accountRedeemablePoints={0}
    changePricingPage={
      Object {
        "_links": Object {
          "calculateFunds": Object {
            "body": Object {
              "fundsAppliedToken": null,
              "itineraryPricingToken": "asdf1234",
            },
            "href": "/v1/mobile-air-booking/page/change/calculate-funds",
            "method": "POST",
          },
          "changeConfirmationPage": Object {
            "body": Object {
              "changeSession": Object {
                "inboundBoundReference": null,
                "outboundBoundReference": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..9QAJrVnET67PZHBTzNhLBw.BUsa2Eiy2O28pHC-4PK-VRgp0VicM3lerADS-JAdZ9OO1H-oV20UzDGN7Lt5xzBlgt7pcJ86ZAio3VX6CFEAC-k1AeJHXJxBcVnldT3MJS1LGGRKxrLz3IqKhTML9nZKrn71_QQuyMtWk2AnbOIegt8NZHeAp1Rx7hJpSkt8g8z5m3sLUkvbl0uF_eQX6wt0KtPWOr6GCmLdnDliZLSWRWd65bm5plJ49d05VVwR7u4jRRvNSE0oadmOvHGIX7lYipGAJKdvy9NK1Znsr6km588z-p_AxWtUW1qob1JduqHqLuHglTrlnleDqsqtc8O-_8OhlI2i3whBKf4543TPyb3u1gv4jwOKyhRngEb6HfU2l29RQYz2bwsWm0uIurVQjnh9mD54ghosHtSvUoCqEuqszHTOhw7Nd0jS4GpbwlqWEwF6WCo4cyNHaoctGmeXTurcihsMGMnW3kgGFY1RU1FAXsJXJ_INJr1cvsjXZWgwAtkwkVZsynb20kvRcgaR8E0dEBZZiSDCSLTVGgHS9IXpUhA1-NS58kFyu6-BewrnYsRzxsJdc6a97J2lkj27lCer9A3G5Ci0cI1R-UdPXmaZs-RZGF8rkuKn7AwyFfhDUs0FtSB2hwH2eaOJ4wqG7GpVacIf-O-wjhPfaOoDucJtiYX3KeYVkiJE3WOV6ANI0fFDfclLhupRLRX7lYYx6ZdIkkbKjUMG4WlVrRdhQOdwJDre2R4ks6wiLICXu_TMhWO7TCDtzCTZYu4dy0o-pAgztLuHtZZ_KrI6_kr_jh08dk_6DvAXWMJDj60vrFWqMZCZn_eFcwpWTRqbAjl-gRtVR82MY8GLBeboZgnsFqUE6hTRHfdemsThwyN-dHTCF8WxyxHmfm0PhFMLOEO8uSs9M4VoHWpmXGKNuPF22gE-koSXvA1r1_8G0YNrdNPAVigImPHrbXpD-LUU2PvcZPXHbRhRj8bCloVz6FUCu8VfvBMxw7VNSLEm1lhdUBJ8Z4FdB8t__KqEqKO1lXVdzGxVFfJ5HlK-HQcgEoM2R166IPRmZ52UqKSQBa0GesMT_S5zgkyZIbRN62xqe60WutLCTW7ihZrnN32llEPvlxMC23AFcipTwFDuFr_32j9EzVZD05RGViIei521bjoOzA90kZv2T5LOi6XMK3gXMybm6WvUnwYNgPMLisErYR2n-bgiyDzs760vLydbD9gycNT9m4MRHpo5aaxX-Ts5U8rc9uFXztchoGSDpiQbfrQmDH2bfC5eZK9ZYHy7eZW2y5zWhakZ4OCIRhkGgqftm4-JxBduUy9cJ2-zvvJziFQ4S9K4VOVfJ1lMg8LqFVpzM6sVE0okBtZ3XejJFxOP4dQZY2l3madaLk5NZ_KNnOQyZ-ovGVxmm94LlScqOT42tREbf_73lvcn6Wt2ATENVWRPZTc7yGX7a8zbDtSX6pnz-fbbG3_om5HyjtOUhHgd-nxt4Lng5r6NvGmZvyY3DAOh_gkHpjumCOiy4Rj9WSgfeWDDHsUr0_aaj0VXXPmwOrfeCMA95RBnpC923qPXEO7G63a3jFi1SKQhR5uuGkdrZ_dBdw0klmLjItj4g0TSy8atH5kF8utN5XShz0bGdNosaZ6O7peyKRX4tye2sJGJ_DvqIqT1EbDwbfBm4c1xE__lxmvzHP1rlhk7QxnDPyR4-DpLb320lvP0yebbgCed1SbphbVKNWMAAy4h0U9fFial26zZ-AWqIrtIb0cmLxbcCLehzEPpfPDEuaiipef_bEVjhIq7LICyQh11Ai2b7T9HzE-uVcdOTvc1kMOjZAda2pqsKqNl2OWUQuBqd39FcUqMhrAODDBMZd3tLZXwIbv8Uk3hpzLEiF2XNeSJNWIyY2qoagpRC9C-DkWX9c3Dj01x7JkWD8NH4XfxkTBVX9P-AvLjhgkausSntPIAuww5W1QwmrBMmxvtIh4XJBYM_aOKDjT0CMNDY_13CiXsiY664AKiDgBz18foD19Q_xQUCWAPLQ6toHCXIP0On_-HVnoV0-rggk2M8VoaIh-6_uCDfhh7263eypgh3FeSZX6BcPzyAml1vALmvvwqAloDjpD0j4pferqXzcMEHU5nWB4Fzw-cxcLXvH1HE67PZt1x4vr_NqKVU1pNniceMT2BN1r3ze-QB-OJ3XuZ465ugKnnXmyeBOLDG2ukcKtKPheNawJzJx8t4HGTjgOGz4AGkZ70mgyk1FP-goola9wXDou83XQfzpw8MvfTM9eaVKevRwUt1YYratgrLxhhfsJjbafX4NnjBWq1UzxHb9HPkPifHedIgIK6_MPDNrgTmsQhhPoOmqWuH9ATfJFu5k9OagmFX0B8hTI2QJk5HGsFYRFBuGUaQyZP-5IdDq-c2inD1QScm-HNdSf7TcLtm6pwgbPc9RE5JxcQ9YFuXgfS.ny96ufWsUugcagT1rrvnZw",
              },
              "newFlightToken": "eyJwYXltZW50UmVxdWlyZWQiOmZhbHNlLCJyZWZ1bmRSZXF1aXJlZCI6ZmFsc2UsImhhc05vblJlZnVuZGFibGUiOmZhbHNlLCJib3VuZHMiOlt7ImRlcGFydHVyZVRpbWUiOiIwNToxNSIsImRlcGFydHVyZURhdGUiOiIyMDE4LTA1LTE4IiwiZnJvbUFpcnBvcnRDb2RlIjoiQUxCIiwidG9BaXJwb3J0Q29kZSI6IkFVUyIsImZsaWdodCI6IjY5NTYifSxudWxsXSwiaXRpbmVyYXJ5UHJpY2UiOnsicmVjb3JkVHlwZSI6IkZBUkUiLCJmYXJlUHJpY2luZ1R5cGUiOiJBRFVMVCIsImJhc2VGYXJlIjoiNTA1Ljg0IiwiZmFyZVRheGVzQW5kRmVlcyI6W3siY29kZSI6IkFZIiwiYW1vdW50IjoiNS42MCJ9LHsiY29kZSI6IlVTIiwiYW1vdW50IjoiMzcuOTQifSx7ImNvZGUiOiJYRiIsImFtb3VudCI6IjkuMDAifSx7ImNvZGUiOiJaUCIsImFtb3VudCI6IjguMjAifV0sInRvdGFsVGF4ZXNBbmRGZWUiOiI2MC43NCIsInRvdGFsRmFyZSI6IjU2Ni41OCIsInBheFR5cGVUb3RhbCI6IjU2Ni41OCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJjaGFuZ2VUeXBlIjoiUkVWQUxJREFURV9ET0NVTUVOVFMiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifSwiZGlmZmVyZW5jZUl0aW5lcmFyeVByaWNlIjp7InJlY29yZFR5cGUiOiJGQVJFIiwiYmFzZUZhcmUiOiIwLjAwIiwidG90YWxUYXhlc0FuZEZlZXMiOiIwLjAwIiwidG90YWxGYXJlIjoiMC4wMCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifX0=",
              "productIdToken": Object {
                "inbound": null,
                "outbound": "eyJwcm9kdWN0SWQiOiJBTll8QURUfFlMLFksQUxCLEJXSSwyMDE4LTA1LTE4VDA1OjE1LTA0OjAwLDIwMTgtMDUtMThUMDY6MzAtMDQ6MDAsV04sV04sNjk1Niw3M1d8WUwsWSxCV0ksQVVTLDIwMTgtMDUtMThUMDg6MTAtMDQ6MDAsMjAxOC0wNS0xOFQxMDo1MC0wNTowMCxXTixXTiwyNzYsNzNXIiwicXVvdGVkUHJpY2UiOiI1NjYuNTgiLCJpbnRlcm5hdGlvbmFsIjpmYWxzZSwiZmFyZVR5cGUiOiJBTlkifQ",
              },
            },
            "href": "/v1/mobile-air-booking/page/flights/x-change",
            "method": "PUT",
            "xhref": "/v1/mobile-air-booking/page/flights/x-change",
          },
        },
        "_meta": Object {
          "newCardHasSufficientFunds": false,
          "purchaseWithPoints": false,
        },
        "acceptanceText1": "Select cancel to change your flight selections.",
        "acceptanceText2": "By tapping continue, you accept the new price.",
        "accountNumber": null,
        "bounds": Array [
          Object {
            "arrivalAirport": Object {
              "code": "AUS",
              "country": null,
              "name": "Austin",
              "state": "TX",
            },
            "arrivalTime": "10:50",
            "boundType": "DEPARTING",
            "departureAirport": Object {
              "code": "ALB",
              "country": null,
              "name": "Albany",
              "state": "NY",
            },
            "departureDate": "2018-05-18",
            "departureTime": "05:15",
            "fareProductDetails": Object {
              "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
              "label": "Anytime",
            },
            "flights": Array [
              Object {
                "number": "6956",
                "wifiOnBoard": true,
              },
              Object {
                "number": "276",
                "wifiOnBoard": true,
              },
            ],
            "isNextDayArrival": false,
            "passengers": Array [
              Object {
                "bookingCode": "Y",
                "count": 1,
                "fareType": "Anytime",
                "type": "Adult",
              },
            ],
            "stops": Array [
              Object {
                "airport": Object {
                  "code": "BWI",
                  "country": null,
                  "name": "Baltimore/Washington",
                  "state": "MD",
                },
                "arrivalTime": "06:30",
                "changePlanes": true,
                "departureTime": "08:10",
              },
            ],
            "travelTime": "6h 35m",
          },
          Object {
            "arrivalAirport": Object {
              "code": "ALB",
              "country": null,
              "name": "Albany",
              "state": "NY",
            },
            "arrivalDate": "2018-11-01",
            "arrivalTime": "09:30",
            "boundType": "RETURNING",
            "departureAirport": Object {
              "code": "AUS",
              "country": null,
              "name": "Austin",
              "state": "TX",
            },
            "departureDate": "2018-11-01",
            "departureTime": "06:30",
            "fareProductDetails": Object {
              "fareRulesUrl": "https://mobile.southwest.com/fare-rules/wanna-get-away",
              "label": "Wanna Get Away",
            },
            "flights": Array [
              Object {
                "number": "1504",
                "wifiOnBoard": true,
              },
            ],
            "isNextDayArrival": false,
            "passengers": Array [
              Object {
                "bookingCode": "Q",
                "count": 1,
                "fareType": "Wanna Get Away",
                "type": "ADULT",
              },
            ],
            "stops": Array [
              Object {
                "airport": Object {
                  "code": "HOU",
                  "country": null,
                  "name": "Houston (Hobby)",
                  "state": "TX",
                },
                "arrivalTime": "15:35",
                "changePlanes": true,
                "departureTime": "16:25",
              },
            ],
            "travelTime": "02:00",
          },
        ],
        "emailReceiptTo": "testemail@wnco.com",
        "fareRulesWithLinks": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
        "fareSummary": Object {
          "newAmountDue": Object {
            "fare": Object {
              "amount": "0.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Amount due",
            "tax": null,
          },
          "newTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "New trip cost",
            "tax": null,
          },
          "nonRefundable": null,
          "originalTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Original trip cost",
            "tax": null,
          },
          "refundable": null,
          "tax": null,
          "totalRefundability": null,
        },
        "hasNonRefundable": false,
        "header": "ALB - AUS (Round trip)",
        "isRepriceNotification": true,
        "messages": Array [],
        "passengers": Array [
          Object {
            "displayName": "YANG LU",
            "firstName": "Yang",
            "lastName": "Lu",
          },
        ],
        "paymentRequired": false,
        "recordLocator": "WBYDCX",
        "refundRequired": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "505.84",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": null,
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "code": "AY",
                "description": "Sept 11 Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "US",
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "37.94",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "XF",
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "9.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "ZP",
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "8.20",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "566.58",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
          "seniorFare": null,
        },
      }
    }
    changeType={
      Object {
        "downGrade": false,
        "evenExchange": false,
        "upGrade": true,
      }
    }
    getAccountInfoFn={[Function]}
    hideDialogFn={[Function]}
    isLoggedIn={false}
    push={[Function]}
    resumeAfterLogin={false}
    resumeAfterLoginFn={[Function]}
    shouldResumeAfterLogin={false}
    showDialogFn={[Function]}
  >
    <div>
      <Connect(PageHeader)>
        <PageHeader
          hidden={false}
          isWebView={false}
          noPadding={false}
        >
          <div>
            <div
              className="page-header"
              id=""
            >
              <div>
                <span
                  className="inline-block mr4"
                >
                  Price
                </span>
                <span
                  className="normal inline-block mr2"
                  data-qa="airPort-codes"
                >
                  ALB - AUS (Round trip)
                </span>
              </div>
            </div>
            <Connect(ErrorHeaderContainer)>
              <ErrorHeaderContainer
                errorMessage={null}
                hasError={false}
              >
                <div />
              </ErrorHeaderContainer>
            </Connect(ErrorHeaderContainer)>
          </div>
        </PageHeader>
      </Connect(PageHeader)>
      <ReservationFlightSummary
        bounds={
          Array [
            Object {
              "arrivalAirport": Object {
                "code": "AUS",
                "country": null,
                "name": "Austin",
                "state": "TX",
              },
              "arrivalTime": "10:50",
              "boundType": "DEPARTING",
              "departureAirport": Object {
                "code": "ALB",
                "country": null,
                "name": "Albany",
                "state": "NY",
              },
              "departureDate": "2018-05-18",
              "departureTime": "05:15",
              "fareProductDetails": Object {
                "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                "label": "Anytime",
              },
              "flights": Array [
                Object {
                  "number": "6956",
                  "wifiOnBoard": true,
                },
                Object {
                  "number": "276",
                  "wifiOnBoard": true,
                },
              ],
              "isNextDayArrival": false,
              "passengers": Array [
                Object {
                  "bookingCode": "Y",
                  "count": 1,
                  "fareType": "Anytime",
                  "type": "Adult",
                },
              ],
              "stops": Array [
                Object {
                  "airport": Object {
                    "code": "BWI",
                    "country": null,
                    "name": "Baltimore/Washington",
                    "state": "MD",
                  },
                  "arrivalTime": "06:30",
                  "changePlanes": true,
                  "departureTime": "08:10",
                },
              ],
              "travelTime": "6h 35m",
            },
            Object {
              "arrivalAirport": Object {
                "code": "ALB",
                "country": null,
                "name": "Albany",
                "state": "NY",
              },
              "arrivalDate": "2018-11-01",
              "arrivalTime": "09:30",
              "boundType": "RETURNING",
              "departureAirport": Object {
                "code": "AUS",
                "country": null,
                "name": "Austin",
                "state": "TX",
              },
              "departureDate": "2018-11-01",
              "departureTime": "06:30",
              "fareProductDetails": Object {
                "fareRulesUrl": "https://mobile.southwest.com/fare-rules/wanna-get-away",
                "label": "Wanna Get Away",
              },
              "flights": Array [
                Object {
                  "number": "1504",
                  "wifiOnBoard": true,
                },
              ],
              "isNextDayArrival": false,
              "passengers": Array [
                Object {
                  "bookingCode": "Q",
                  "count": 1,
                  "fareType": "Wanna Get Away",
                  "type": "ADULT",
                },
              ],
              "stops": Array [
                Object {
                  "airport": Object {
                    "code": "HOU",
                    "country": null,
                    "name": "Houston (Hobby)",
                    "state": "TX",
                  },
                  "arrivalTime": "15:35",
                  "changePlanes": true,
                  "departureTime": "16:25",
                },
              ],
              "travelTime": "02:00",
            },
          ]
        }
      >
        <div
          className="reservation-flight-summary"
        >
          <FlightSummaryCard
            boundDetail={
              Object {
                "arrivalAirport": Object {
                  "code": "AUS",
                  "country": null,
                  "name": "Austin",
                  "state": "TX",
                },
                "arrivalTime": "10:50",
                "boundType": "DEPARTING",
                "departureAirport": Object {
                  "code": "ALB",
                  "country": null,
                  "name": "Albany",
                  "state": "NY",
                },
                "departureDate": "2018-05-18",
                "departureTime": "05:15",
                "fareProductDetails": Object {
                  "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                  "label": "Anytime",
                },
                "flights": Array [
                  Object {
                    "number": "6956",
                    "wifiOnBoard": true,
                  },
                  Object {
                    "number": "276",
                    "wifiOnBoard": true,
                  },
                ],
                "isNextDayArrival": false,
                "stops": Array [
                  Object {
                    "airport": Object {
                      "code": "BWI",
                      "country": null,
                      "name": "Baltimore/Washington",
                      "state": "MD",
                    },
                    "arrivalTime": "06:30",
                    "changePlanes": true,
                    "departureTime": "08:10",
                  },
                ],
                "travelTime": "6h 35m",
              }
            }
            key="0"
          >
            <div
              className="flight-summary-card rd3 overflow-hidden"
            >
              <FlightSummaryCardHeader
                departureDate="Fri, May 18, 2018"
                isReturning={false}
              >
                <div
                  className="flight-summary-header flight-summary-departing"
                >
                  <span
                    className="flight-summary-title"
                  >
                    Departing
                  </span>
                  <span
                    className="flight-day"
                  >
                    Fri, May 18, 2018
                  </span>
                </div>
              </FlightSummaryCardHeader>
              <div
                className="flight-summary-content"
              >
                <div
                  className="pricing-summary--group"
                >
                  <FlightInfo
                    flights={
                      Array [
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "6956",
                        },
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "276",
                        },
                      ]
                    }
                    isTotalTravelDuration={true}
                    travelTime="6h 35m"
                  >
                    <div>
                      <div
                        className="flight-info"
                      >
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="FLIGHT"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                FLIGHT
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightNumberList
                                  flights={
                                    Array [
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "6956",
                                      },
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "276",
                                      },
                                    ]
                                  }
                                >
                                  <div
                                    className="flight-number-list flex-row"
                                  >
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="6956"
                                      key="0"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          6956
                                        </span>
                                      </span>
                                    </FlightNumber>
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="276"
                                      key="1"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          276
                                        </span>
                                      </span>
                                    </FlightNumber>
                                  </div>
                                </FlightNumberList>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="TOTAL TRAVEL TIME"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                TOTAL TRAVEL TIME
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <div
                                  className="flight-duration"
                                >
                                  <Icon
                                    title="color-stopwatch"
                                    type="color-stopwatch"
                                  >
                                    <i
                                      className="icon icon_color-stopwatch"
                                      title="color-stopwatch"
                                    />
                                  </Icon>
                                  <span
                                    data-qa="flight-duration-minutes"
                                  >
                                    6h 35m
                                  </span>
                                </div>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                      </div>
                    </div>
                  </FlightInfo>
                  <ItineraryVertical
                    boundDetail={
                      Object {
                        "arrivalAirport": Object {
                          "code": "AUS",
                          "country": null,
                          "name": "Austin",
                          "state": "TX",
                        },
                        "arrivalTime": "10:50",
                        "boundType": "DEPARTING",
                        "departureAirport": Object {
                          "code": "ALB",
                          "country": null,
                          "name": "Albany",
                          "state": "NY",
                        },
                        "departureDate": "2018-05-18",
                        "departureTime": "05:15",
                        "fareProductDetails": Object {
                          "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                          "label": "Anytime",
                        },
                        "flights": Array [
                          Object {
                            "number": "6956",
                            "wifiOnBoard": true,
                          },
                          Object {
                            "number": "276",
                            "wifiOnBoard": true,
                          },
                        ],
                        "isNextDayArrival": false,
                        "stops": Array [
                          Object {
                            "airport": Object {
                              "code": "BWI",
                              "country": null,
                              "name": "Baltimore/Washington",
                              "state": "MD",
                            },
                            "arrivalTime": "06:30",
                            "changePlanes": true,
                            "departureTime": "08:10",
                          },
                        ],
                        "travelTime": "6h 35m",
                      }
                    }
                  >
                    <div
                      className="itinerary-vertical"
                    >
                      <div
                        className="itinerary-vertical--row"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="DEPARTS"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                DEPARTS
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="05:15"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="05:15"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            5:15
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "ALB",
                                "airportName": "Albany",
                                "cityState": "NY",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                ALB
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Albany
                                , 
                                NY
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                      <Panel
                        collapsible={true}
                        header={
                          <div
                            className="itinerary-vertical--row"
                          >
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-icon"
                            >
                              <span
                                className="stop-circle"
                              >
                                 
                              </span>
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-line"
                            >
                               
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-info"
                            >
                              <StopDetailsText
                                displayAsTwoLine={true}
                                flightData={
                                  Object {
                                    "connectionAirportCode": "BWI",
                                    "isOvernight": false,
                                    "numberOfStops": 1,
                                  }
                                }
                                withIcon={true}
                              />
                            </div>
                          </div>
                        }
                        onSelect={[Function]}
                      >
                        <div
                          className="panel"
                          id={null}
                          onSelect={null}
                        >
                          <div
                            className="panel--heading"
                          >
                            <div
                              className="panel__title itinerary-vertical--row"
                            >
                              <a
                                aria-expanded="false"
                                className="panel-anchor collapsed"
                                href="#"
                                onClick={[Function]}
                              >
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-icon"
                                >
                                  <span
                                    className="stop-circle"
                                  >
                                     
                                  </span>
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-line"
                                >
                                   
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-info"
                                >
                                  <StopDetailsText
                                    displayAsTwoLine={true}
                                    flightData={
                                      Object {
                                        "connectionAirportCode": "BWI",
                                        "isOvernight": false,
                                        "numberOfStops": 1,
                                      }
                                    }
                                    withIcon={true}
                                  >
                                    <span
                                      className="stops-detail stops-detail--with-icon"
                                    >
                                      <span>
                                        1
                                         
                                        Stop
                                        <span>
                                          <span>
                                            : 
                                            <span
                                              className="stops-detail--icon"
                                            >
                                              <Icon
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="icon icon_airplane-return"
                                                />
                                              </Icon>
                                              <Icon
                                                className="stop-highlight"
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="stop-highlight icon icon_airplane-return"
                                                />
                                              </Icon>
                                            </span>
                                            <br />
                                          </span>
                                          Change planes
                                        </span>
                                         
                                        BWI
                                      </span>
                                    </span>
                                  </StopDetailsText>
                                </div>
                              </a>
                            </div>
                          </div>
                          <div
                            aria-expanded="false"
                            className="panel_collapsed collapse"
                            key="panel-header"
                          >
                            <div
                              className="panel--body"
                              key="0"
                            >
                              <Stop
                                key="0"
                                stop={
                                  Object {
                                    "airport": Object {
                                      "code": "BWI",
                                      "country": null,
                                      "name": "Baltimore/Washington",
                                      "state": "MD",
                                    },
                                    "arrivalTime": "06:30",
                                    "changePlanes": true,
                                    "departureTime": "08:10",
                                  }
                                }
                                stopNumber={1}
                                stopsTotalNumber={1}
                              >
                                <div
                                  className="itinerary-vertical--row itinerary-vertical--row--stop"
                                >
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-icon"
                                  >
                                    <span
                                      className="stop-circle"
                                    >
                                         
                                    </span>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-line"
                                  >
                                     
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-time"
                                  >
                                    <div
                                      className="flight-time-group"
                                    >
                                      <LabelContainer
                                        labelText="ARRIVES"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            ARRIVES
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="06:30"
                                              statusIconPosition="UNDER"
                                              timeString="06:30"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="06:30"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        6:30
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                      <LabelContainer
                                        labelText="DEPARTS"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            DEPARTS
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="08:10"
                                              statusIconPosition="UNDER"
                                              timeString="08:10"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="08:10"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        8:10
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                    </div>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-info"
                                  >
                                    <div
                                      className="stop-detail stop-detail--has-change"
                                    >
                                      <AirportInfo
                                        airportInfo={
                                          Object {
                                            "airportCode": "BWI",
                                          }
                                        }
                                      >
                                        <div
                                          className="airport-info"
                                        >
                                          <div
                                            className="airport-info--code"
                                          >
                                            BWI
                                          </div>
                                        </div>
                                      </AirportInfo>
                                      <div
                                        className="stop-detail__info italic"
                                      >
                                        Stop: 
                                        <span>
                                          Baltimore/Washington, MD
                                        </span>
                                      </div>
                                      <div
                                        className="stop-detail__status italic"
                                      >
                                        <span>
                                          Change planes
                                            
                                          <Icon
                                            className="stop-detail--airplane-return"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return icon icon_airplane-return"
                                            />
                                          </Icon>
                                          <Icon
                                            className="stop-detail--airplane-return highlight"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return highlight icon icon_airplane-return"
                                            />
                                          </Icon>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Stop>
                            </div>
                          </div>
                        </div>
                      </Panel>
                      <div
                        className="itinerary-vertical--row itinerary-vertical--arrival"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon itinerary-vertical--col-icon-none-line"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="ARRIVES"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                ARRIVES
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  isNextDay={false}
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="10:50"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="10:50"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            10:50
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator
                                          isNextDay={false}
                                        />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "AUS",
                                "airportName": "Austin",
                                "cityState": "TX",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                AUS
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Austin
                                , 
                                TX
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                    </div>
                  </ItineraryVertical>
                </div>
                <div
                  className="pricing-summary--group"
                >
                  <PassengerPrice
                    fareLabel="Anytime"
                    fareRulesUrl="https://mobile.southwest.com/fare-rules/anytime"
                    key="0"
                    passengerCount={1}
                    passengerType="Adult"
                  >
                    <div
                      className="passenger-price"
                    >
                      <div
                        className="passenger-price--info"
                      >
                        <span
                          className="passenger-price--number-and-type"
                          data-qa="passenger-price-passengers--number-and-type"
                        >
                          1
                           
                          Adult
                        </span>
                        <Connect(ContentLink)
                          className="passenger-price--fare-type"
                          dataQa="passenger-price--fare-type"
                          href="https://mobile.southwest.com/fare-rules/anytime"
                        >
                          <ContentLink
                            className="passenger-price--fare-type"
                            dataQa="passenger-price--fare-type"
                            href="https://mobile.southwest.com/fare-rules/anytime"
                            isWebView={false}
                          >
                            <a
                              className="passenger-price--fare-type"
                              data-qa="passenger-price--fare-type"
                              href="https://mobile.southwest.com/fare-rules/anytime"
                              target="_blank"
                            >
                              Anytime
                            </a>
                          </ContentLink>
                        </Connect(ContentLink)>
                      </div>
                    </div>
                  </PassengerPrice>
                </div>
              </div>
            </div>
          </FlightSummaryCard>
          <FlightSummaryCard
            boundDetail={
              Object {
                "arrivalAirport": Object {
                  "code": "ALB",
                  "country": null,
                  "name": "Albany",
                  "state": "NY",
                },
                "arrivalDate": "2018-11-01",
                "arrivalTime": "09:30",
                "boundType": "RETURNING",
                "departureAirport": Object {
                  "code": "AUS",
                  "country": null,
                  "name": "Austin",
                  "state": "TX",
                },
                "departureDate": "2018-11-01",
                "departureTime": "06:30",
                "fareProductDetails": Object {
                  "fareRulesUrl": "https://mobile.southwest.com/fare-rules/wanna-get-away",
                  "label": "Wanna Get Away",
                },
                "flights": Array [
                  Object {
                    "number": "1504",
                    "wifiOnBoard": true,
                  },
                ],
                "isNextDayArrival": false,
                "stops": Array [
                  Object {
                    "airport": Object {
                      "code": "HOU",
                      "country": null,
                      "name": "Houston (Hobby)",
                      "state": "TX",
                    },
                    "arrivalTime": "15:35",
                    "changePlanes": true,
                    "departureTime": "16:25",
                  },
                ],
                "travelTime": "02:00",
              }
            }
            key="1"
          >
            <div
              className="flight-summary-card rd3 overflow-hidden"
            >
              <FlightSummaryCardHeader
                departureDate="Thu, Nov 1, 2018"
                isReturning={true}
              >
                <div
                  className="flight-summary-header flight-summary-returning"
                >
                  <span
                    className="flight-summary-title"
                  >
                    Returning
                  </span>
                  <span
                    className="flight-day"
                  >
                    Thu, Nov 1, 2018
                  </span>
                </div>
              </FlightSummaryCardHeader>
              <div
                className="flight-summary-content"
              >
                <div
                  className="pricing-summary--group"
                >
                  <FlightInfo
                    flights={
                      Array [
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "1504",
                        },
                      ]
                    }
                    isTotalTravelDuration={true}
                    travelTime="02:00"
                  >
                    <div>
                      <div
                        className="flight-info"
                      >
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="FLIGHT"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                FLIGHT
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightNumberList
                                  flights={
                                    Array [
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "1504",
                                      },
                                    ]
                                  }
                                >
                                  <div
                                    className="flight-number-list flex-row"
                                  >
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="1504"
                                      key="0"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          1504
                                        </span>
                                      </span>
                                    </FlightNumber>
                                  </div>
                                </FlightNumberList>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="TOTAL TRAVEL TIME"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                TOTAL TRAVEL TIME
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <div
                                  className="flight-duration"
                                >
                                  <Icon
                                    title="color-stopwatch"
                                    type="color-stopwatch"
                                  >
                                    <i
                                      className="icon icon_color-stopwatch"
                                      title="color-stopwatch"
                                    />
                                  </Icon>
                                  <span
                                    data-qa="flight-duration-minutes"
                                  >
                                    02:00
                                  </span>
                                </div>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                      </div>
                    </div>
                  </FlightInfo>
                  <ItineraryVertical
                    boundDetail={
                      Object {
                        "arrivalAirport": Object {
                          "code": "ALB",
                          "country": null,
                          "name": "Albany",
                          "state": "NY",
                        },
                        "arrivalDate": "2018-11-01",
                        "arrivalTime": "09:30",
                        "boundType": "RETURNING",
                        "departureAirport": Object {
                          "code": "AUS",
                          "country": null,
                          "name": "Austin",
                          "state": "TX",
                        },
                        "departureDate": "2018-11-01",
                        "departureTime": "06:30",
                        "fareProductDetails": Object {
                          "fareRulesUrl": "https://mobile.southwest.com/fare-rules/wanna-get-away",
                          "label": "Wanna Get Away",
                        },
                        "flights": Array [
                          Object {
                            "number": "1504",
                            "wifiOnBoard": true,
                          },
                        ],
                        "isNextDayArrival": false,
                        "stops": Array [
                          Object {
                            "airport": Object {
                              "code": "HOU",
                              "country": null,
                              "name": "Houston (Hobby)",
                              "state": "TX",
                            },
                            "arrivalTime": "15:35",
                            "changePlanes": true,
                            "departureTime": "16:25",
                          },
                        ],
                        "travelTime": "02:00",
                      }
                    }
                  >
                    <div
                      className="itinerary-vertical itinerary-vertical--return"
                    >
                      <div
                        className="itinerary-vertical--row"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-return"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-return"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="DEPARTS"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                DEPARTS
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="06:30"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="06:30"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            6:30
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "AUS",
                                "airportName": "Austin",
                                "cityState": "TX",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                AUS
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Austin
                                , 
                                TX
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                      <Panel
                        collapsible={true}
                        header={
                          <div
                            className="itinerary-vertical--row"
                          >
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-icon"
                            >
                              <span
                                className="stop-circle"
                              >
                                 
                              </span>
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-line"
                            >
                               
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-info"
                            >
                              <StopDetailsText
                                displayAsTwoLine={true}
                                flightData={
                                  Object {
                                    "connectionAirportCode": "HOU",
                                    "isOvernight": false,
                                    "numberOfStops": 1,
                                  }
                                }
                                withIcon={true}
                              />
                            </div>
                          </div>
                        }
                        onSelect={[Function]}
                      >
                        <div
                          className="panel"
                          id={null}
                          onSelect={null}
                        >
                          <div
                            className="panel--heading"
                          >
                            <div
                              className="panel__title itinerary-vertical--row"
                            >
                              <a
                                aria-expanded="false"
                                className="panel-anchor collapsed"
                                href="#"
                                onClick={[Function]}
                              >
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-icon"
                                >
                                  <span
                                    className="stop-circle"
                                  >
                                     
                                  </span>
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-line"
                                >
                                   
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-info"
                                >
                                  <StopDetailsText
                                    displayAsTwoLine={true}
                                    flightData={
                                      Object {
                                        "connectionAirportCode": "HOU",
                                        "isOvernight": false,
                                        "numberOfStops": 1,
                                      }
                                    }
                                    withIcon={true}
                                  >
                                    <span
                                      className="stops-detail stops-detail--with-icon"
                                    >
                                      <span>
                                        1
                                         
                                        Stop
                                        <span>
                                          <span>
                                            : 
                                            <span
                                              className="stops-detail--icon"
                                            >
                                              <Icon
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="icon icon_airplane-return"
                                                />
                                              </Icon>
                                              <Icon
                                                className="stop-highlight"
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="stop-highlight icon icon_airplane-return"
                                                />
                                              </Icon>
                                            </span>
                                            <br />
                                          </span>
                                          Change planes
                                        </span>
                                         
                                        HOU
                                      </span>
                                    </span>
                                  </StopDetailsText>
                                </div>
                              </a>
                            </div>
                          </div>
                          <div
                            aria-expanded="false"
                            className="panel_collapsed collapse"
                            key="panel-header"
                          >
                            <div
                              className="panel--body"
                              key="0"
                            >
                              <Stop
                                key="0"
                                stop={
                                  Object {
                                    "airport": Object {
                                      "code": "HOU",
                                      "country": null,
                                      "name": "Houston (Hobby)",
                                      "state": "TX",
                                    },
                                    "arrivalTime": "15:35",
                                    "changePlanes": true,
                                    "departureTime": "16:25",
                                  }
                                }
                                stopNumber={1}
                                stopsTotalNumber={1}
                              >
                                <div
                                  className="itinerary-vertical--row itinerary-vertical--row--stop"
                                >
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-icon"
                                  >
                                    <span
                                      className="stop-circle"
                                    >
                                         
                                    </span>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-line"
                                  >
                                     
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-time"
                                  >
                                    <div
                                      className="flight-time-group"
                                    >
                                      <LabelContainer
                                        labelText="ARRIVES"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            ARRIVES
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="15:35"
                                              statusIconPosition="UNDER"
                                              timeString="15:35"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="15:35"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        3:35
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        PM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                      <LabelContainer
                                        labelText="DEPARTS"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            DEPARTS
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="16:25"
                                              statusIconPosition="UNDER"
                                              timeString="16:25"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="16:25"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        4:25
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        PM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                    </div>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-info"
                                  >
                                    <div
                                      className="stop-detail stop-detail--has-change"
                                    >
                                      <AirportInfo
                                        airportInfo={
                                          Object {
                                            "airportCode": "HOU",
                                          }
                                        }
                                      >
                                        <div
                                          className="airport-info"
                                        >
                                          <div
                                            className="airport-info--code"
                                          >
                                            HOU
                                          </div>
                                        </div>
                                      </AirportInfo>
                                      <div
                                        className="stop-detail__info italic"
                                      >
                                        Stop: 
                                        <span>
                                          Houston (Hobby), TX
                                        </span>
                                      </div>
                                      <div
                                        className="stop-detail__status italic"
                                      >
                                        <span>
                                          Change planes
                                            
                                          <Icon
                                            className="stop-detail--airplane-return"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return icon icon_airplane-return"
                                            />
                                          </Icon>
                                          <Icon
                                            className="stop-detail--airplane-return highlight"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return highlight icon icon_airplane-return"
                                            />
                                          </Icon>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Stop>
                            </div>
                          </div>
                        </div>
                      </Panel>
                      <div
                        className="itinerary-vertical--row itinerary-vertical--arrival"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon itinerary-vertical--col-icon-none-line"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-return"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-return"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="ARRIVES"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                ARRIVES
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  isNextDay={false}
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="09:30"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="09:30"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            9:30
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator
                                          isNextDay={false}
                                        />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "ALB",
                                "airportName": "Albany",
                                "cityState": "NY",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                ALB
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Albany
                                , 
                                NY
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                    </div>
                  </ItineraryVertical>
                </div>
                <div
                  className="pricing-summary--group"
                >
                  <PassengerPrice
                    fareLabel="Wanna Get Away"
                    fareRulesUrl="https://mobile.southwest.com/fare-rules/wanna-get-away"
                    key="0"
                    passengerCount={1}
                    passengerType="ADULT"
                  >
                    <div
                      className="passenger-price"
                    >
                      <div
                        className="passenger-price--info"
                      >
                        <span
                          className="passenger-price--number-and-type"
                          data-qa="passenger-price-passengers--number-and-type"
                        >
                          1
                           
                          Adult
                        </span>
                        <Connect(ContentLink)
                          className="passenger-price--fare-type"
                          dataQa="passenger-price--fare-type"
                          href="https://mobile.southwest.com/fare-rules/wanna-get-away"
                        >
                          <ContentLink
                            className="passenger-price--fare-type"
                            dataQa="passenger-price--fare-type"
                            href="https://mobile.southwest.com/fare-rules/wanna-get-away"
                            isWebView={false}
                          >
                            <a
                              className="passenger-price--fare-type"
                              data-qa="passenger-price--fare-type"
                              href="https://mobile.southwest.com/fare-rules/wanna-get-away"
                              target="_blank"
                            >
                              Wanna Get Away
                            </a>
                          </ContentLink>
                        </Connect(ContentLink)>
                      </div>
                    </div>
                  </PassengerPrice>
                </div>
              </div>
            </div>
          </FlightSummaryCard>
        </div>
      </ReservationFlightSummary>
      <PriceSummaryNotice
        fareRulesWithLinks="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
      >
        <div
          className="price-summary-notice"
        >
          <Connect(ContentLink)
            raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
          >
            <ContentLink
              isWebView={false}
              raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
                  }
                }
              />
            </ContentLink>
          </Connect(ContentLink)>
        </div>
      </PriceSummaryNotice>
      <AirChangePriceTotal
        change={
          Object {
            "downGrade": false,
            "evenExchange": false,
            "upGrade": true,
          }
        }
        fareSummary={
          Object {
            "newAmountDue": Object {
              "fare": Object {
                "amount": "0.00",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Amount due",
              "tax": null,
            },
            "newTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "New trip cost",
              "tax": null,
            },
            "nonRefundable": null,
            "originalTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Original trip cost",
              "tax": null,
            },
            "refundable": null,
            "tax": null,
            "totalRefundability": null,
          }
        }
        isPointsChange={false}
        totals={
          Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "505.84",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": null,
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "code": "AY",
                  "description": "Sept 11 Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "US",
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "37.94",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "XF",
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "9.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "ZP",
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "8.20",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
            "seniorFare": null,
          }
        }
      >
        <div
          className="air-change-price-total"
        >
          <div
            className="air-change-price-total--info"
          >
            <div
              className="pb5 mb5 bdb"
              data-qa="change-refund-summary--never-change"
            >
              We never charge change fees. You'll pay only the difference in fare.
            </div>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="Original trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  Original trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="New trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  New trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
          </div>
          <div>
            <div
              className="air-change-price-total--fare-summary"
            >
              <PriceTotalLine
                title="Amount due"
                total={
                  Object {
                    "amount": "0.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  }
                }
                type="total"
              >
                <div
                  className="price-line"
                >
                  <span
                    className="price-line--title"
                  >
                    Amount due
                  </span>
                  <div
                    className="price-amount"
                  >
                    <div
                      className="price-line--currency_total"
                    >
                      <Currency
                        amount="0.00"
                        currencyCode="USD"
                        currencySymbol="$"
                        showPts={false}
                      >
                        <div
                          className="currency"
                        >
                          <span
                            className="money-sign"
                          >
                            $
                          </span>
                          <span
                            data-qa="total-amount"
                          >
                            0.00
                          </span>
                        </div>
                      </Currency>
                    </div>
                  </div>
                </div>
              </PriceTotalLine>
            </div>
            <div
              className="air-change-price-total--fare-summary-note"
            >
              <div
                className="price-total--info-col"
              >
                <p>
                  Includes taxes and fees
                </p>
              </div>
            </div>
          </div>
        </div>
      </AirChangePriceTotal>
      <div
        className="p4 bgpblue"
      >
        <Button
          className="continue"
          color="yellow"
          fluid={true}
          onClick={[Function]}
          size="larger"
        >
          <button
            className="continue button button--fluid larger button--yellow"
            onClick={[Function]}
            type="button"
          >
            Continue
          </button>
        </Button>
      </div>
    </div>
  </AirChangeSummaryPage>
</Provider>
`;

exports[`#Air Change Pricing Summary page render header and bound detail with EB pricing messages should render the priceMessages array as an array of BasicBanners 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <AirChangeSummaryPage
    accountRedeemablePoints={0}
    changePricingPage={
      Object {
        "_links": Object {
          "calculateFunds": Object {
            "body": Object {
              "fundsAppliedToken": null,
              "itineraryPricingToken": "asdf1234",
            },
            "href": "/v1/mobile-air-booking/page/change/calculate-funds",
            "method": "POST",
          },
          "changeConfirmationPage": Object {
            "body": Object {
              "changeSession": Object {
                "inboundBoundReference": null,
                "outboundBoundReference": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2In0..9QAJrVnET67PZHBTzNhLBw.BUsa2Eiy2O28pHC-4PK-VRgp0VicM3lerADS-JAdZ9OO1H-oV20UzDGN7Lt5xzBlgt7pcJ86ZAio3VX6CFEAC-k1AeJHXJxBcVnldT3MJS1LGGRKxrLz3IqKhTML9nZKrn71_QQuyMtWk2AnbOIegt8NZHeAp1Rx7hJpSkt8g8z5m3sLUkvbl0uF_eQX6wt0KtPWOr6GCmLdnDliZLSWRWd65bm5plJ49d05VVwR7u4jRRvNSE0oadmOvHGIX7lYipGAJKdvy9NK1Znsr6km588z-p_AxWtUW1qob1JduqHqLuHglTrlnleDqsqtc8O-_8OhlI2i3whBKf4543TPyb3u1gv4jwOKyhRngEb6HfU2l29RQYz2bwsWm0uIurVQjnh9mD54ghosHtSvUoCqEuqszHTOhw7Nd0jS4GpbwlqWEwF6WCo4cyNHaoctGmeXTurcihsMGMnW3kgGFY1RU1FAXsJXJ_INJr1cvsjXZWgwAtkwkVZsynb20kvRcgaR8E0dEBZZiSDCSLTVGgHS9IXpUhA1-NS58kFyu6-BewrnYsRzxsJdc6a97J2lkj27lCer9A3G5Ci0cI1R-UdPXmaZs-RZGF8rkuKn7AwyFfhDUs0FtSB2hwH2eaOJ4wqG7GpVacIf-O-wjhPfaOoDucJtiYX3KeYVkiJE3WOV6ANI0fFDfclLhupRLRX7lYYx6ZdIkkbKjUMG4WlVrRdhQOdwJDre2R4ks6wiLICXu_TMhWO7TCDtzCTZYu4dy0o-pAgztLuHtZZ_KrI6_kr_jh08dk_6DvAXWMJDj60vrFWqMZCZn_eFcwpWTRqbAjl-gRtVR82MY8GLBeboZgnsFqUE6hTRHfdemsThwyN-dHTCF8WxyxHmfm0PhFMLOEO8uSs9M4VoHWpmXGKNuPF22gE-koSXvA1r1_8G0YNrdNPAVigImPHrbXpD-LUU2PvcZPXHbRhRj8bCloVz6FUCu8VfvBMxw7VNSLEm1lhdUBJ8Z4FdB8t__KqEqKO1lXVdzGxVFfJ5HlK-HQcgEoM2R166IPRmZ52UqKSQBa0GesMT_S5zgkyZIbRN62xqe60WutLCTW7ihZrnN32llEPvlxMC23AFcipTwFDuFr_32j9EzVZD05RGViIei521bjoOzA90kZv2T5LOi6XMK3gXMybm6WvUnwYNgPMLisErYR2n-bgiyDzs760vLydbD9gycNT9m4MRHpo5aaxX-Ts5U8rc9uFXztchoGSDpiQbfrQmDH2bfC5eZK9ZYHy7eZW2y5zWhakZ4OCIRhkGgqftm4-JxBduUy9cJ2-zvvJziFQ4S9K4VOVfJ1lMg8LqFVpzM6sVE0okBtZ3XejJFxOP4dQZY2l3madaLk5NZ_KNnOQyZ-ovGVxmm94LlScqOT42tREbf_73lvcn6Wt2ATENVWRPZTc7yGX7a8zbDtSX6pnz-fbbG3_om5HyjtOUhHgd-nxt4Lng5r6NvGmZvyY3DAOh_gkHpjumCOiy4Rj9WSgfeWDDHsUr0_aaj0VXXPmwOrfeCMA95RBnpC923qPXEO7G63a3jFi1SKQhR5uuGkdrZ_dBdw0klmLjItj4g0TSy8atH5kF8utN5XShz0bGdNosaZ6O7peyKRX4tye2sJGJ_DvqIqT1EbDwbfBm4c1xE__lxmvzHP1rlhk7QxnDPyR4-DpLb320lvP0yebbgCed1SbphbVKNWMAAy4h0U9fFial26zZ-AWqIrtIb0cmLxbcCLehzEPpfPDEuaiipef_bEVjhIq7LICyQh11Ai2b7T9HzE-uVcdOTvc1kMOjZAda2pqsKqNl2OWUQuBqd39FcUqMhrAODDBMZd3tLZXwIbv8Uk3hpzLEiF2XNeSJNWIyY2qoagpRC9C-DkWX9c3Dj01x7JkWD8NH4XfxkTBVX9P-AvLjhgkausSntPIAuww5W1QwmrBMmxvtIh4XJBYM_aOKDjT0CMNDY_13CiXsiY664AKiDgBz18foD19Q_xQUCWAPLQ6toHCXIP0On_-HVnoV0-rggk2M8VoaIh-6_uCDfhh7263eypgh3FeSZX6BcPzyAml1vALmvvwqAloDjpD0j4pferqXzcMEHU5nWB4Fzw-cxcLXvH1HE67PZt1x4vr_NqKVU1pNniceMT2BN1r3ze-QB-OJ3XuZ465ugKnnXmyeBOLDG2ukcKtKPheNawJzJx8t4HGTjgOGz4AGkZ70mgyk1FP-goola9wXDou83XQfzpw8MvfTM9eaVKevRwUt1YYratgrLxhhfsJjbafX4NnjBWq1UzxHb9HPkPifHedIgIK6_MPDNrgTmsQhhPoOmqWuH9ATfJFu5k9OagmFX0B8hTI2QJk5HGsFYRFBuGUaQyZP-5IdDq-c2inD1QScm-HNdSf7TcLtm6pwgbPc9RE5JxcQ9YFuXgfS.ny96ufWsUugcagT1rrvnZw",
              },
              "newFlightToken": "eyJwYXltZW50UmVxdWlyZWQiOmZhbHNlLCJyZWZ1bmRSZXF1aXJlZCI6ZmFsc2UsImhhc05vblJlZnVuZGFibGUiOmZhbHNlLCJib3VuZHMiOlt7ImRlcGFydHVyZVRpbWUiOiIwNToxNSIsImRlcGFydHVyZURhdGUiOiIyMDE4LTA1LTE4IiwiZnJvbUFpcnBvcnRDb2RlIjoiQUxCIiwidG9BaXJwb3J0Q29kZSI6IkFVUyIsImZsaWdodCI6IjY5NTYifSxudWxsXSwiaXRpbmVyYXJ5UHJpY2UiOnsicmVjb3JkVHlwZSI6IkZBUkUiLCJmYXJlUHJpY2luZ1R5cGUiOiJBRFVMVCIsImJhc2VGYXJlIjoiNTA1Ljg0IiwiZmFyZVRheGVzQW5kRmVlcyI6W3siY29kZSI6IkFZIiwiYW1vdW50IjoiNS42MCJ9LHsiY29kZSI6IlVTIiwiYW1vdW50IjoiMzcuOTQifSx7ImNvZGUiOiJYRiIsImFtb3VudCI6IjkuMDAifSx7ImNvZGUiOiJaUCIsImFtb3VudCI6IjguMjAifV0sInRvdGFsVGF4ZXNBbmRGZWUiOiI2MC43NCIsInRvdGFsRmFyZSI6IjU2Ni41OCIsInBheFR5cGVUb3RhbCI6IjU2Ni41OCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJjaGFuZ2VUeXBlIjoiUkVWQUxJREFURV9ET0NVTUVOVFMiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifSwiZGlmZmVyZW5jZUl0aW5lcmFyeVByaWNlIjp7InJlY29yZFR5cGUiOiJGQVJFIiwiYmFzZUZhcmUiOiIwLjAwIiwidG90YWxUYXhlc0FuZEZlZXMiOiIwLjAwIiwidG90YWxGYXJlIjoiMC4wMCIsImZhcmVUeXBlIjoiTk9ORElTQ09VTlQiLCJpdGluZXJhcnlQcmljZVJlZmVyZW5jZSI6IjEifX0=",
              "productIdToken": Object {
                "inbound": null,
                "outbound": "eyJwcm9kdWN0SWQiOiJBTll8QURUfFlMLFksQUxCLEJXSSwyMDE4LTA1LTE4VDA1OjE1LTA0OjAwLDIwMTgtMDUtMThUMDY6MzAtMDQ6MDAsV04sV04sNjk1Niw3M1d8WUwsWSxCV0ksQVVTLDIwMTgtMDUtMThUMDg6MTAtMDQ6MDAsMjAxOC0wNS0xOFQxMDo1MC0wNTowMCxXTixXTiwyNzYsNzNXIiwicXVvdGVkUHJpY2UiOiI1NjYuNTgiLCJpbnRlcm5hdGlvbmFsIjpmYWxzZSwiZmFyZVR5cGUiOiJBTlkifQ",
              },
            },
            "href": "/v1/mobile-air-booking/page/flights/x-change",
            "method": "PUT",
            "xhref": "/v1/mobile-air-booking/page/flights/x-change",
          },
        },
        "_meta": Object {
          "newCardHasSufficientFunds": false,
          "purchaseWithPoints": false,
        },
        "acceptanceText1": "Select cancel to change your flight selections.",
        "acceptanceText2": "By tapping continue, you accept the new price.",
        "accountNumber": null,
        "bounds": Array [
          Object {
            "arrivalAirport": Object {
              "code": "AUS",
              "country": null,
              "name": "Austin",
              "state": "TX",
            },
            "arrivalTime": "10:50",
            "boundType": "DEPARTING",
            "departureAirport": Object {
              "code": "ALB",
              "country": null,
              "name": "Albany",
              "state": "NY",
            },
            "departureDate": "2018-05-18",
            "departureTime": "05:15",
            "fareProductDetails": Object {
              "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
              "label": "Anytime",
            },
            "flights": Array [
              Object {
                "number": "6956",
                "wifiOnBoard": true,
              },
              Object {
                "number": "276",
                "wifiOnBoard": true,
              },
            ],
            "isNextDayArrival": false,
            "passengers": Array [
              Object {
                "bookingCode": "Y",
                "count": 1,
                "fareType": "Anytime",
                "type": "Adult",
              },
            ],
            "stops": Array [
              Object {
                "airport": Object {
                  "code": "BWI",
                  "country": null,
                  "name": "Baltimore/Washington",
                  "state": "MD",
                },
                "arrivalTime": "06:30",
                "changePlanes": true,
                "departureTime": "08:10",
              },
            ],
            "travelTime": "6h 35m",
          },
        ],
        "emailReceiptTo": "testemail@wnco.com",
        "fareRulesWithLinks": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
        "fareSummary": Object {
          "newAmountDue": Object {
            "fare": Object {
              "amount": "0.00",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Amount due",
            "tax": null,
          },
          "newTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "New trip cost",
            "tax": null,
          },
          "nonRefundable": null,
          "originalTripCost": Object {
            "fare": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "item": "Original trip cost",
            "tax": null,
          },
          "refundable": null,
          "tax": null,
          "totalRefundability": null,
        },
        "hasNonRefundable": false,
        "header": "ALB - AUS (One Way)",
        "isRepriceNotification": true,
        "messages": Array [],
        "passengers": Array [
          Object {
            "displayName": "YANG LU",
            "firstName": "Yang",
            "lastName": "Lu",
          },
        ],
        "paymentRequired": false,
        "priceMessages": Array [
          Object {
            "backgroundColor": "DEFAULT",
            "body": "We can not add this product to a flight that leaves within 36 hours of purchase",
            "header": "EarlyBird Check-in is not available",
            "icon": "WARNING",
            "key": "PRICING_EARLY_BIRD_BUNDLED_INSIDE_36_HOURS",
            "textColor": "DEFAULT",
          },
        ],
        "recordLocator": "WBYDCX",
        "refundRequired": false,
        "totals": Object {
          "adultFare": Object {
            "baseFare": Object {
              "discount": null,
              "fare": Object {
                "amount": "505.84",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "totalBaseFare": null,
            },
            "paxTypeTotal": Object {
              "moneyTotal": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "pointsTotal": null,
            },
            "taxesAndFees": Array [
              Object {
                "code": "AY",
                "description": "Sept 11 Security Fee",
                "fee": Object {
                  "amount": "5.60",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "US",
                "description": "Excise Taxes",
                "fee": Object {
                  "amount": "37.94",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "XF",
                "description": "Passenger Facility Charge",
                "fee": Object {
                  "amount": "9.00",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
              Object {
                "code": "ZP",
                "description": "Segment Fee",
                "fee": Object {
                  "amount": "8.20",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
              },
            ],
            "totalPerPassenger": Object {
              "money": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "passengerCount": 1,
              "points": null,
            },
          },
          "moneyTotal": Object {
            "amount": "566.58",
            "currencyCode": "USD",
            "currencySymbol": "$",
          },
          "pointsTotal": null,
          "seniorFare": null,
        },
      }
    }
    changeType={
      Object {
        "downGrade": false,
        "evenExchange": false,
        "upGrade": true,
      }
    }
    getAccountInfoFn={[Function]}
    hideDialogFn={[Function]}
    isLoggedIn={false}
    push={[Function]}
    resumeAfterLogin={false}
    resumeAfterLoginFn={[Function]}
    shouldResumeAfterLogin={false}
    showDialogFn={[Function]}
  >
    <div>
      <Connect(PageHeader)>
        <PageHeader
          hidden={false}
          isWebView={false}
          noPadding={false}
        >
          <div>
            <div
              className="page-header"
              id=""
            >
              <div>
                <span
                  className="inline-block mr4"
                >
                  Price
                </span>
                <span
                  className="normal inline-block mr2"
                  data-qa="airPort-codes"
                >
                  ALB - AUS (One Way)
                </span>
              </div>
            </div>
            <Connect(ErrorHeaderContainer)>
              <ErrorHeaderContainer
                errorMessage={null}
                hasError={false}
              >
                <div />
              </ErrorHeaderContainer>
            </Connect(ErrorHeaderContainer)>
          </div>
        </PageHeader>
      </Connect(PageHeader)>
      <PricingBannerList
        messages={
          Array [
            Object {
              "backgroundColor": "DEFAULT",
              "body": "We can not add this product to a flight that leaves within 36 hours of purchase",
              "header": "EarlyBird Check-in is not available",
              "icon": "WARNING",
              "key": "PRICING_EARLY_BIRD_BUNDLED_INSIDE_36_HOURS",
              "textColor": "DEFAULT",
            },
          ]
        }
      >
        <div
          className="pricing-banner-list"
        >
          <BasicBanner
            className="pricing-banner-list--basic-banner"
            icon="WARNING"
            key="PRICING_EARLY_BIRD_BUNDLED_INSIDE_36_HOURS"
            message="We can not add this product to a flight that leaves within 36 hours of purchase"
            title="EarlyBird Check-in is not available"
          >
            <div
              className="basic-banner pricing-banner-list--basic-banner"
            >
              <div>
                <Icon
                  type="exclamation-circle"
                >
                  <i
                    className="icon icon_exclamation-circle"
                  />
                </Icon>
              </div>
              <div
                className="banner-container"
              >
                <b
                  className="banner-container--title"
                >
                  EarlyBird Check-in is not available
                </b>
                <em
                  className="banner-container--subtitle"
                >
                  We can not add this product to a flight that leaves within 36 hours of purchase
                </em>
              </div>
            </div>
          </BasicBanner>
        </div>
      </PricingBannerList>
      <ReservationFlightSummary
        bounds={
          Array [
            Object {
              "arrivalAirport": Object {
                "code": "AUS",
                "country": null,
                "name": "Austin",
                "state": "TX",
              },
              "arrivalTime": "10:50",
              "boundType": "DEPARTING",
              "departureAirport": Object {
                "code": "ALB",
                "country": null,
                "name": "Albany",
                "state": "NY",
              },
              "departureDate": "2018-05-18",
              "departureTime": "05:15",
              "fareProductDetails": Object {
                "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                "label": "Anytime",
              },
              "flights": Array [
                Object {
                  "number": "6956",
                  "wifiOnBoard": true,
                },
                Object {
                  "number": "276",
                  "wifiOnBoard": true,
                },
              ],
              "isNextDayArrival": false,
              "passengers": Array [
                Object {
                  "bookingCode": "Y",
                  "count": 1,
                  "fareType": "Anytime",
                  "type": "Adult",
                },
              ],
              "stops": Array [
                Object {
                  "airport": Object {
                    "code": "BWI",
                    "country": null,
                    "name": "Baltimore/Washington",
                    "state": "MD",
                  },
                  "arrivalTime": "06:30",
                  "changePlanes": true,
                  "departureTime": "08:10",
                },
              ],
              "travelTime": "6h 35m",
            },
          ]
        }
      >
        <div
          className="reservation-flight-summary"
        >
          <FlightSummaryCard
            boundDetail={
              Object {
                "arrivalAirport": Object {
                  "code": "AUS",
                  "country": null,
                  "name": "Austin",
                  "state": "TX",
                },
                "arrivalTime": "10:50",
                "boundType": "DEPARTING",
                "departureAirport": Object {
                  "code": "ALB",
                  "country": null,
                  "name": "Albany",
                  "state": "NY",
                },
                "departureDate": "2018-05-18",
                "departureTime": "05:15",
                "fareProductDetails": Object {
                  "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                  "label": "Anytime",
                },
                "flights": Array [
                  Object {
                    "number": "6956",
                    "wifiOnBoard": true,
                  },
                  Object {
                    "number": "276",
                    "wifiOnBoard": true,
                  },
                ],
                "isNextDayArrival": false,
                "stops": Array [
                  Object {
                    "airport": Object {
                      "code": "BWI",
                      "country": null,
                      "name": "Baltimore/Washington",
                      "state": "MD",
                    },
                    "arrivalTime": "06:30",
                    "changePlanes": true,
                    "departureTime": "08:10",
                  },
                ],
                "travelTime": "6h 35m",
              }
            }
            key="0"
          >
            <div
              className="flight-summary-card rd3 overflow-hidden"
            >
              <FlightSummaryCardHeader
                departureDate="Fri, May 18, 2018"
                isReturning={false}
              >
                <div
                  className="flight-summary-header flight-summary-departing"
                >
                  <span
                    className="flight-summary-title"
                  >
                    Departing
                  </span>
                  <span
                    className="flight-day"
                  >
                    Fri, May 18, 2018
                  </span>
                </div>
              </FlightSummaryCardHeader>
              <div
                className="flight-summary-content"
              >
                <div
                  className="pricing-summary--group"
                >
                  <FlightInfo
                    flights={
                      Array [
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "6956",
                        },
                        Object {
                          "aircraftInfo": undefined,
                          "flightNumber": "276",
                        },
                      ]
                    }
                    isTotalTravelDuration={true}
                    travelTime="6h 35m"
                  >
                    <div>
                      <div
                        className="flight-info"
                      >
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="FLIGHT"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                FLIGHT
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightNumberList
                                  flights={
                                    Array [
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "6956",
                                      },
                                      Object {
                                        "aircraftInfo": undefined,
                                        "flightNumber": "276",
                                      },
                                    ]
                                  }
                                >
                                  <div
                                    className="flight-number-list flex-row"
                                  >
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="6956"
                                      key="0"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          6956
                                        </span>
                                      </span>
                                    </FlightNumber>
                                    <FlightNumber
                                      aircraftType=""
                                      flightNumber="276"
                                      key="1"
                                    >
                                      <span
                                        className="flight-number"
                                      >
                                        <span>
                                          276
                                        </span>
                                      </span>
                                    </FlightNumber>
                                  </div>
                                </FlightNumberList>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="flight-info-col"
                        >
                          <LabelContainer
                            labelText="TOTAL TRAVEL TIME"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                TOTAL TRAVEL TIME
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <div
                                  className="flight-duration"
                                >
                                  <Icon
                                    title="color-stopwatch"
                                    type="color-stopwatch"
                                  >
                                    <i
                                      className="icon icon_color-stopwatch"
                                      title="color-stopwatch"
                                    />
                                  </Icon>
                                  <span
                                    data-qa="flight-duration-minutes"
                                  >
                                    6h 35m
                                  </span>
                                </div>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                      </div>
                    </div>
                  </FlightInfo>
                  <ItineraryVertical
                    boundDetail={
                      Object {
                        "arrivalAirport": Object {
                          "code": "AUS",
                          "country": null,
                          "name": "Austin",
                          "state": "TX",
                        },
                        "arrivalTime": "10:50",
                        "boundType": "DEPARTING",
                        "departureAirport": Object {
                          "code": "ALB",
                          "country": null,
                          "name": "Albany",
                          "state": "NY",
                        },
                        "departureDate": "2018-05-18",
                        "departureTime": "05:15",
                        "fareProductDetails": Object {
                          "fareRulesUrl": "https://mobile.southwest.com/fare-rules/anytime",
                          "label": "Anytime",
                        },
                        "flights": Array [
                          Object {
                            "number": "6956",
                            "wifiOnBoard": true,
                          },
                          Object {
                            "number": "276",
                            "wifiOnBoard": true,
                          },
                        ],
                        "isNextDayArrival": false,
                        "stops": Array [
                          Object {
                            "airport": Object {
                              "code": "BWI",
                              "country": null,
                              "name": "Baltimore/Washington",
                              "state": "MD",
                            },
                            "arrivalTime": "06:30",
                            "changePlanes": true,
                            "departureTime": "08:10",
                          },
                        ],
                        "travelTime": "6h 35m",
                      }
                    }
                  >
                    <div
                      className="itinerary-vertical"
                    >
                      <div
                        className="itinerary-vertical--row"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="DEPARTS"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                DEPARTS
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="05:15"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="05:15"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            5:15
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "ALB",
                                "airportName": "Albany",
                                "cityState": "NY",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                ALB
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Albany
                                , 
                                NY
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                      <Panel
                        collapsible={true}
                        header={
                          <div
                            className="itinerary-vertical--row"
                          >
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-icon"
                            >
                              <span
                                className="stop-circle"
                              >
                                 
                              </span>
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-line"
                            >
                               
                            </div>
                            <div
                              className="itinerary-vertical--col itinerary-vertical--col-info"
                            >
                              <StopDetailsText
                                displayAsTwoLine={true}
                                flightData={
                                  Object {
                                    "connectionAirportCode": "BWI",
                                    "isOvernight": false,
                                    "numberOfStops": 1,
                                  }
                                }
                                withIcon={true}
                              />
                            </div>
                          </div>
                        }
                        onSelect={[Function]}
                      >
                        <div
                          className="panel"
                          id={null}
                          onSelect={null}
                        >
                          <div
                            className="panel--heading"
                          >
                            <div
                              className="panel__title itinerary-vertical--row"
                            >
                              <a
                                aria-expanded="false"
                                className="panel-anchor collapsed"
                                href="#"
                                onClick={[Function]}
                              >
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-icon"
                                >
                                  <span
                                    className="stop-circle"
                                  >
                                     
                                  </span>
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-line"
                                >
                                   
                                </div>
                                <div
                                  className="itinerary-vertical--col itinerary-vertical--col-info"
                                >
                                  <StopDetailsText
                                    displayAsTwoLine={true}
                                    flightData={
                                      Object {
                                        "connectionAirportCode": "BWI",
                                        "isOvernight": false,
                                        "numberOfStops": 1,
                                      }
                                    }
                                    withIcon={true}
                                  >
                                    <span
                                      className="stops-detail stops-detail--with-icon"
                                    >
                                      <span>
                                        1
                                         
                                        Stop
                                        <span>
                                          <span>
                                            : 
                                            <span
                                              className="stops-detail--icon"
                                            >
                                              <Icon
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="icon icon_airplane-return"
                                                />
                                              </Icon>
                                              <Icon
                                                className="stop-highlight"
                                                type="airplane-return"
                                              >
                                                <i
                                                  className="stop-highlight icon icon_airplane-return"
                                                />
                                              </Icon>
                                            </span>
                                            <br />
                                          </span>
                                          Change planes
                                        </span>
                                         
                                        BWI
                                      </span>
                                    </span>
                                  </StopDetailsText>
                                </div>
                              </a>
                            </div>
                          </div>
                          <div
                            aria-expanded="false"
                            className="panel_collapsed collapse"
                            key="panel-header"
                          >
                            <div
                              className="panel--body"
                              key="0"
                            >
                              <Stop
                                key="0"
                                stop={
                                  Object {
                                    "airport": Object {
                                      "code": "BWI",
                                      "country": null,
                                      "name": "Baltimore/Washington",
                                      "state": "MD",
                                    },
                                    "arrivalTime": "06:30",
                                    "changePlanes": true,
                                    "departureTime": "08:10",
                                  }
                                }
                                stopNumber={1}
                                stopsTotalNumber={1}
                              >
                                <div
                                  className="itinerary-vertical--row itinerary-vertical--row--stop"
                                >
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-icon"
                                  >
                                    <span
                                      className="stop-circle"
                                    >
                                         
                                    </span>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-line"
                                  >
                                     
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-time"
                                  >
                                    <div
                                      className="flight-time-group"
                                    >
                                      <LabelContainer
                                        labelText="ARRIVES"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            ARRIVES
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="06:30"
                                              statusIconPosition="UNDER"
                                              timeString="06:30"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="06:30"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        6:30
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                      <LabelContainer
                                        labelText="DEPARTS"
                                      >
                                        <div
                                          className="label-container"
                                        >
                                          <div
                                            className="label-container--label"
                                          >
                                            DEPARTS
                                          </div>
                                          <div
                                            className="label-container--content"
                                          >
                                            <FlightTimeAndStatus
                                              originalTime="08:10"
                                              statusIconPosition="UNDER"
                                              timeString="08:10"
                                            >
                                              <div
                                                className="flight-time-status flight-time-status--undefined"
                                              >
                                                <FlightTime
                                                  timeString="08:10"
                                                >
                                                  <div
                                                    className="flight-time"
                                                  >
                                                    <div
                                                      className="flight-time--time"
                                                    >
                                                      <span>
                                                        8:10
                                                      </span>
                                                      <span
                                                        className="time-period"
                                                      >
                                                        AM
                                                      </span>
                                                    </div>
                                                    <MultiDayIndicator />
                                                  </div>
                                                </FlightTime>
                                              </div>
                                            </FlightTimeAndStatus>
                                          </div>
                                        </div>
                                      </LabelContainer>
                                    </div>
                                  </div>
                                  <div
                                    className="itinerary-vertical--col itinerary-vertical--col-info"
                                  >
                                    <div
                                      className="stop-detail stop-detail--has-change"
                                    >
                                      <AirportInfo
                                        airportInfo={
                                          Object {
                                            "airportCode": "BWI",
                                          }
                                        }
                                      >
                                        <div
                                          className="airport-info"
                                        >
                                          <div
                                            className="airport-info--code"
                                          >
                                            BWI
                                          </div>
                                        </div>
                                      </AirportInfo>
                                      <div
                                        className="stop-detail__info italic"
                                      >
                                        Stop: 
                                        <span>
                                          Baltimore/Washington, MD
                                        </span>
                                      </div>
                                      <div
                                        className="stop-detail__status italic"
                                      >
                                        <span>
                                          Change planes
                                            
                                          <Icon
                                            className="stop-detail--airplane-return"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return icon icon_airplane-return"
                                            />
                                          </Icon>
                                          <Icon
                                            className="stop-detail--airplane-return highlight"
                                            type="airplane-return"
                                          >
                                            <i
                                              className="stop-detail--airplane-return highlight icon icon_airplane-return"
                                            />
                                          </Icon>
                                        </span>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </Stop>
                            </div>
                          </div>
                        </div>
                      </Panel>
                      <div
                        className="itinerary-vertical--row itinerary-vertical--arrival"
                      >
                        <div
                          className="svg-wrapper itinerary-vertical--col itinerary-vertical--col-icon itinerary-vertical--col-icon-none-line"
                        >
                          <Icon
                            className="full-width-svg"
                            type="airplane-depart"
                          >
                            <i
                              className="full-width-svg icon icon_airplane-depart"
                            />
                          </Icon>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-line"
                        >
                           
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-time"
                        >
                          <LabelContainer
                            labelText="ARRIVES"
                          >
                            <div
                              className="label-container"
                            >
                              <div
                                className="label-container--label"
                              >
                                ARRIVES
                              </div>
                              <div
                                className="label-container--content"
                              >
                                <FlightTimeAndStatus
                                  isNextDay={false}
                                  originalTime={null}
                                  statusIconPosition="UNDER"
                                  timeString="10:50"
                                >
                                  <div
                                    className="flight-time-status flight-time-status--undefined"
                                  >
                                    <FlightTime
                                      timeString="10:50"
                                    >
                                      <div
                                        className="flight-time"
                                      >
                                        <div
                                          className="flight-time--time"
                                        >
                                          <span>
                                            10:50
                                          </span>
                                          <span
                                            className="time-period"
                                          >
                                            AM
                                          </span>
                                        </div>
                                        <MultiDayIndicator
                                          isNextDay={false}
                                        />
                                      </div>
                                    </FlightTime>
                                  </div>
                                </FlightTimeAndStatus>
                              </div>
                            </div>
                          </LabelContainer>
                        </div>
                        <div
                          className="itinerary-vertical--col itinerary-vertical--col-info"
                        >
                          <AirportInfo
                            airportInfo={
                              Object {
                                "airportCode": "AUS",
                                "airportName": "Austin",
                                "cityState": "TX",
                                "country": null,
                              }
                            }
                            showDetail={true}
                          >
                            <div
                              className="airport-info"
                            >
                              <div
                                className="airport-info--code"
                              >
                                AUS
                              </div>
                              <div
                                className="airport-info--detail"
                              >
                                Austin
                                , 
                                TX
                              </div>
                            </div>
                          </AirportInfo>
                        </div>
                      </div>
                    </div>
                  </ItineraryVertical>
                </div>
                <div
                  className="pricing-summary--group"
                >
                  <PassengerPrice
                    fareLabel="Anytime"
                    fareRulesUrl="https://mobile.southwest.com/fare-rules/anytime"
                    key="0"
                    passengerCount={1}
                    passengerType="Adult"
                  >
                    <div
                      className="passenger-price"
                    >
                      <div
                        className="passenger-price--info"
                      >
                        <span
                          className="passenger-price--number-and-type"
                          data-qa="passenger-price-passengers--number-and-type"
                        >
                          1
                           
                          Adult
                        </span>
                        <Connect(ContentLink)
                          className="passenger-price--fare-type"
                          dataQa="passenger-price--fare-type"
                          href="https://mobile.southwest.com/fare-rules/anytime"
                        >
                          <ContentLink
                            className="passenger-price--fare-type"
                            dataQa="passenger-price--fare-type"
                            href="https://mobile.southwest.com/fare-rules/anytime"
                            isWebView={false}
                          >
                            <a
                              className="passenger-price--fare-type"
                              data-qa="passenger-price--fare-type"
                              href="https://mobile.southwest.com/fare-rules/anytime"
                              target="_blank"
                            >
                              Anytime
                            </a>
                          </ContentLink>
                        </Connect(ContentLink)>
                      </div>
                    </div>
                  </PassengerPrice>
                </div>
              </div>
            </div>
          </FlightSummaryCard>
        </div>
      </ReservationFlightSummary>
      <PriceSummaryNotice
        fareRulesWithLinks="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
      >
        <div
          className="price-summary-notice"
        >
          <Connect(ContentLink)
            raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
          >
            <ContentLink
              isWebView={false}
              raw="Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase."
            >
              <span
                dangerouslySetInnerHTML={
                  Object {
                    "__html": "Please read <a href=\\"https://mobile.southwest.com/fare-rules\\" target=\\"_blank\\">fare rules</a> associated with purchase.",
                  }
                }
              />
            </ContentLink>
          </Connect(ContentLink)>
        </div>
      </PriceSummaryNotice>
      <AirChangePriceTotal
        change={
          Object {
            "downGrade": false,
            "evenExchange": false,
            "upGrade": true,
          }
        }
        fareSummary={
          Object {
            "newAmountDue": Object {
              "fare": Object {
                "amount": "0.00",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Amount due",
              "tax": null,
            },
            "newTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "New trip cost",
              "tax": null,
            },
            "nonRefundable": null,
            "originalTripCost": Object {
              "fare": Object {
                "amount": "566.58",
                "currencyCode": "USD",
                "currencySymbol": "$",
              },
              "item": "Original trip cost",
              "tax": null,
            },
            "refundable": null,
            "tax": null,
            "totalRefundability": null,
          }
        }
        isPointsChange={false}
        totals={
          Object {
            "adultFare": Object {
              "baseFare": Object {
                "discount": null,
                "fare": Object {
                  "amount": "505.84",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "totalBaseFare": null,
              },
              "paxTypeTotal": Object {
                "moneyTotal": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "pointsTotal": null,
              },
              "taxesAndFees": Array [
                Object {
                  "code": "AY",
                  "description": "Sept 11 Security Fee",
                  "fee": Object {
                    "amount": "5.60",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "US",
                  "description": "Excise Taxes",
                  "fee": Object {
                    "amount": "37.94",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "XF",
                  "description": "Passenger Facility Charge",
                  "fee": Object {
                    "amount": "9.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
                Object {
                  "code": "ZP",
                  "description": "Segment Fee",
                  "fee": Object {
                    "amount": "8.20",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  },
                },
              ],
              "totalPerPassenger": Object {
                "money": Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                },
                "passengerCount": 1,
                "points": null,
              },
            },
            "moneyTotal": Object {
              "amount": "566.58",
              "currencyCode": "USD",
              "currencySymbol": "$",
            },
            "pointsTotal": null,
            "seniorFare": null,
          }
        }
      >
        <div
          className="air-change-price-total"
        >
          <div
            className="air-change-price-total--info"
          >
            <div
              className="pb5 mb5 bdb"
              data-qa="change-refund-summary--never-change"
            >
              We never charge change fees. You'll pay only the difference in fare.
            </div>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="Original trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  Original trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
            <PriceTotalLine
              className="price-change"
              pointsTotal={null}
              showPts={true}
              title="New trip cost"
              total={
                Object {
                  "amount": "566.58",
                  "currencyCode": "USD",
                  "currencySymbol": "$",
                }
              }
              type="total"
            >
              <div
                className="price-line price-change"
              >
                <span
                  className="price-line--title"
                >
                  New trip cost
                </span>
                <div
                  className="price-amount"
                >
                  <div
                    className="price-line--currency_total"
                  >
                    <Currency
                      amount="566.58"
                      currencyCode="USD"
                      currencySymbol="$"
                      showPts={true}
                    >
                      <div
                        className="currency"
                      >
                        <span
                          className="money-sign"
                        >
                          $
                        </span>
                        <span
                          data-qa="total-amount"
                        >
                          566.58
                        </span>
                      </div>
                    </Currency>
                  </div>
                </div>
              </div>
            </PriceTotalLine>
          </div>
          <div>
            <div
              className="air-change-price-total--fare-summary"
            >
              <PriceTotalLine
                title="Amount due"
                total={
                  Object {
                    "amount": "0.00",
                    "currencyCode": "USD",
                    "currencySymbol": "$",
                  }
                }
                type="total"
              >
                <div
                  className="price-line"
                >
                  <span
                    className="price-line--title"
                  >
                    Amount due
                  </span>
                  <div
                    className="price-amount"
                  >
                    <div
                      className="price-line--currency_total"
                    >
                      <Currency
                        amount="0.00"
                        currencyCode="USD"
                        currencySymbol="$"
                        showPts={false}
                      >
                        <div
                          className="currency"
                        >
                          <span
                            className="money-sign"
                          >
                            $
                          </span>
                          <span
                            data-qa="total-amount"
                          >
                            0.00
                          </span>
                        </div>
                      </Currency>
                    </div>
                  </div>
                </div>
              </PriceTotalLine>
            </div>
            <div
              className="air-change-price-total--fare-summary-note"
            >
              <div
                className="price-total--info-col"
              >
                <p>
                  Includes taxes and fees
                </p>
              </div>
            </div>
          </div>
        </div>
      </AirChangePriceTotal>
      <div
        className="p4 bgpblue"
      >
        <Button
          className="continue"
          color="yellow"
          fluid={true}
          onClick={[Function]}
          size="larger"
        >
          <button
            className="continue button button--fluid larger button--yellow"
            onClick={[Function]}
            type="button"
          >
            Continue
          </button>
        </Button>
      </div>
    </div>
  </AirChangeSummaryPage>
</Provider>
`;
